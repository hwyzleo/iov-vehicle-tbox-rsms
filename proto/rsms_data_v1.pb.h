// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rsms_data_v1.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_rsms_5fdata_5fv1_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_rsms_5fdata_5fv1_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_rsms_5fdata_5fv1_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_rsms_5fdata_5fv1_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rsms_5fdata_5fv1_2eproto;
namespace tbox {
namespace mcu {
namespace rsms {
namespace v1 {
class Alarm;
class AlarmDefaultTypeInternal;
extern AlarmDefaultTypeInternal _Alarm_default_instance_;
class BatteryTemperature;
class BatteryTemperatureDefaultTypeInternal;
extern BatteryTemperatureDefaultTypeInternal _BatteryTemperature_default_instance_;
class BatteryVoltage;
class BatteryVoltageDefaultTypeInternal;
extern BatteryVoltageDefaultTypeInternal _BatteryVoltage_default_instance_;
class DriveMotor;
class DriveMotorDefaultTypeInternal;
extern DriveMotorDefaultTypeInternal _DriveMotor_default_instance_;
class Extremum;
class ExtremumDefaultTypeInternal;
extern ExtremumDefaultTypeInternal _Extremum_default_instance_;
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class RsmsData;
class RsmsDataDefaultTypeInternal;
extern RsmsDataDefaultTypeInternal _RsmsData_default_instance_;
class SingleBatteryTemperature;
class SingleBatteryTemperatureDefaultTypeInternal;
extern SingleBatteryTemperatureDefaultTypeInternal _SingleBatteryTemperature_default_instance_;
class SingleBatteryVoltage;
class SingleBatteryVoltageDefaultTypeInternal;
extern SingleBatteryVoltageDefaultTypeInternal _SingleBatteryVoltage_default_instance_;
class SingleDriveMotor;
class SingleDriveMotorDefaultTypeInternal;
extern SingleDriveMotorDefaultTypeInternal _SingleDriveMotor_default_instance_;
class VehicleData;
class VehicleDataDefaultTypeInternal;
extern VehicleDataDefaultTypeInternal _VehicleData_default_instance_;
}  // namespace v1
}  // namespace rsms
}  // namespace mcu
}  // namespace tbox
PROTOBUF_NAMESPACE_OPEN
template<> ::tbox::mcu::rsms::v1::Alarm* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::Alarm>(Arena*);
template<> ::tbox::mcu::rsms::v1::BatteryTemperature* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::BatteryTemperature>(Arena*);
template<> ::tbox::mcu::rsms::v1::BatteryVoltage* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::BatteryVoltage>(Arena*);
template<> ::tbox::mcu::rsms::v1::DriveMotor* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::DriveMotor>(Arena*);
template<> ::tbox::mcu::rsms::v1::Extremum* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::Extremum>(Arena*);
template<> ::tbox::mcu::rsms::v1::Position* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::Position>(Arena*);
template<> ::tbox::mcu::rsms::v1::RsmsData* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::RsmsData>(Arena*);
template<> ::tbox::mcu::rsms::v1::SingleBatteryTemperature* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::SingleBatteryTemperature>(Arena*);
template<> ::tbox::mcu::rsms::v1::SingleBatteryVoltage* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::SingleBatteryVoltage>(Arena*);
template<> ::tbox::mcu::rsms::v1::SingleDriveMotor* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::SingleDriveMotor>(Arena*);
template<> ::tbox::mcu::rsms::v1::VehicleData* Arena::CreateMaybeMessage<::tbox::mcu::rsms::v1::VehicleData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tbox {
namespace mcu {
namespace rsms {
namespace v1 {

// ===================================================================

class VehicleData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.VehicleData) */ {
 public:
  inline VehicleData() : VehicleData(nullptr) {};
  virtual ~VehicleData();

  VehicleData(const VehicleData& from);
  VehicleData(VehicleData&& from) noexcept
    : VehicleData() {
    *this = ::std::move(from);
  }

  inline VehicleData& operator=(const VehicleData& from) {
    CopyFrom(from);
    return *this;
  }
  inline VehicleData& operator=(VehicleData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VehicleData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleData* internal_default_instance() {
    return reinterpret_cast<const VehicleData*>(
               &_VehicleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VehicleData& a, VehicleData& b) {
    a.Swap(&b);
  }
  inline void Swap(VehicleData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VehicleData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VehicleData* New() const final {
    return CreateMaybeMessage<VehicleData>(nullptr);
  }

  VehicleData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VehicleData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VehicleData& from);
  void MergeFrom(const VehicleData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.VehicleData";
  }
  protected:
  explicit VehicleData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVehicleStateFieldNumber = 1,
    kChargingStateFieldNumber = 2,
    kRunningModeFieldNumber = 3,
    kSpeedFieldNumber = 4,
    kTotalOdometerFieldNumber = 5,
    kTotalVoltageFieldNumber = 6,
    kTotalCurrentFieldNumber = 7,
    kSocFieldNumber = 8,
    kDcdcStateFieldNumber = 9,
    kDrivingFieldNumber = 10,
    kBrakingFieldNumber = 11,
    kGearFieldNumber = 12,
    kInsulationResistanceFieldNumber = 13,
    kAcceleratorPedalPositionFieldNumber = 14,
    kBrakePedalPositionFieldNumber = 15,
  };
  // uint32 vehicle_state = 1;
  void clear_vehicle_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 vehicle_state() const;
  void set_vehicle_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_vehicle_state() const;
  void _internal_set_vehicle_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 charging_state = 2;
  void clear_charging_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 charging_state() const;
  void set_charging_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_charging_state() const;
  void _internal_set_charging_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 running_mode = 3;
  void clear_running_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 running_mode() const;
  void set_running_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_running_mode() const;
  void _internal_set_running_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 speed = 4;
  void clear_speed();
  ::PROTOBUF_NAMESPACE_ID::uint32 speed() const;
  void set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_speed() const;
  void _internal_set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_odometer = 5;
  void clear_total_odometer();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_odometer() const;
  void set_total_odometer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_odometer() const;
  void _internal_set_total_odometer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_voltage = 6;
  void clear_total_voltage();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_voltage() const;
  void set_total_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_voltage() const;
  void _internal_set_total_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_current = 7;
  void clear_total_current();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_current() const;
  void set_total_current(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_current() const;
  void _internal_set_total_current(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 soc = 8;
  void clear_soc();
  ::PROTOBUF_NAMESPACE_ID::uint32 soc() const;
  void set_soc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_soc() const;
  void _internal_set_soc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 dcdc_state = 9;
  void clear_dcdc_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 dcdc_state() const;
  void set_dcdc_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dcdc_state() const;
  void _internal_set_dcdc_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool driving = 10;
  void clear_driving();
  bool driving() const;
  void set_driving(bool value);
  private:
  bool _internal_driving() const;
  void _internal_set_driving(bool value);
  public:

  // bool braking = 11;
  void clear_braking();
  bool braking() const;
  void set_braking(bool value);
  private:
  bool _internal_braking() const;
  void _internal_set_braking(bool value);
  public:

  // uint32 gear = 12;
  void clear_gear();
  ::PROTOBUF_NAMESPACE_ID::uint32 gear() const;
  void set_gear(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gear() const;
  void _internal_set_gear(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 insulation_resistance = 13;
  void clear_insulation_resistance();
  ::PROTOBUF_NAMESPACE_ID::uint32 insulation_resistance() const;
  void set_insulation_resistance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_insulation_resistance() const;
  void _internal_set_insulation_resistance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 accelerator_pedal_position = 14;
  void clear_accelerator_pedal_position();
  ::PROTOBUF_NAMESPACE_ID::uint32 accelerator_pedal_position() const;
  void set_accelerator_pedal_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accelerator_pedal_position() const;
  void _internal_set_accelerator_pedal_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 brake_pedal_position = 15;
  void clear_brake_pedal_position();
  ::PROTOBUF_NAMESPACE_ID::uint32 brake_pedal_position() const;
  void set_brake_pedal_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brake_pedal_position() const;
  void _internal_set_brake_pedal_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.VehicleData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 vehicle_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 charging_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 running_mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 speed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_odometer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_voltage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_current_;
  ::PROTOBUF_NAMESPACE_ID::uint32 soc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dcdc_state_;
  bool driving_;
  bool braking_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gear_;
  ::PROTOBUF_NAMESPACE_ID::uint32 insulation_resistance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accelerator_pedal_position_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brake_pedal_position_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// -------------------------------------------------------------------

class DriveMotor PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.DriveMotor) */ {
 public:
  inline DriveMotor() : DriveMotor(nullptr) {};
  virtual ~DriveMotor();

  DriveMotor(const DriveMotor& from);
  DriveMotor(DriveMotor&& from) noexcept
    : DriveMotor() {
    *this = ::std::move(from);
  }

  inline DriveMotor& operator=(const DriveMotor& from) {
    CopyFrom(from);
    return *this;
  }
  inline DriveMotor& operator=(DriveMotor&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DriveMotor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DriveMotor* internal_default_instance() {
    return reinterpret_cast<const DriveMotor*>(
               &_DriveMotor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DriveMotor& a, DriveMotor& b) {
    a.Swap(&b);
  }
  inline void Swap(DriveMotor* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DriveMotor* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DriveMotor* New() const final {
    return CreateMaybeMessage<DriveMotor>(nullptr);
  }

  DriveMotor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DriveMotor>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DriveMotor& from);
  void MergeFrom(const DriveMotor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DriveMotor* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.DriveMotor";
  }
  protected:
  explicit DriveMotor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDriveMotorListFieldNumber = 2,
    kDriveMotorCountFieldNumber = 1,
  };
  // repeated .tbox.mcu.rsms.v1.SingleDriveMotor drive_motor_list = 2;
  int drive_motor_list_size() const;
  private:
  int _internal_drive_motor_list_size() const;
  public:
  void clear_drive_motor_list();
  ::tbox::mcu::rsms::v1::SingleDriveMotor* mutable_drive_motor_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleDriveMotor >*
      mutable_drive_motor_list();
  private:
  const ::tbox::mcu::rsms::v1::SingleDriveMotor& _internal_drive_motor_list(int index) const;
  ::tbox::mcu::rsms::v1::SingleDriveMotor* _internal_add_drive_motor_list();
  public:
  const ::tbox::mcu::rsms::v1::SingleDriveMotor& drive_motor_list(int index) const;
  ::tbox::mcu::rsms::v1::SingleDriveMotor* add_drive_motor_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleDriveMotor >&
      drive_motor_list() const;

  // uint32 drive_motor_count = 1;
  void clear_drive_motor_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 drive_motor_count() const;
  void set_drive_motor_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_drive_motor_count() const;
  void _internal_set_drive_motor_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.DriveMotor)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleDriveMotor > drive_motor_list_;
  ::PROTOBUF_NAMESPACE_ID::uint32 drive_motor_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// -------------------------------------------------------------------

class SingleDriveMotor PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.SingleDriveMotor) */ {
 public:
  inline SingleDriveMotor() : SingleDriveMotor(nullptr) {};
  virtual ~SingleDriveMotor();

  SingleDriveMotor(const SingleDriveMotor& from);
  SingleDriveMotor(SingleDriveMotor&& from) noexcept
    : SingleDriveMotor() {
    *this = ::std::move(from);
  }

  inline SingleDriveMotor& operator=(const SingleDriveMotor& from) {
    CopyFrom(from);
    return *this;
  }
  inline SingleDriveMotor& operator=(SingleDriveMotor&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SingleDriveMotor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SingleDriveMotor* internal_default_instance() {
    return reinterpret_cast<const SingleDriveMotor*>(
               &_SingleDriveMotor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SingleDriveMotor& a, SingleDriveMotor& b) {
    a.Swap(&b);
  }
  inline void Swap(SingleDriveMotor* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SingleDriveMotor* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SingleDriveMotor* New() const final {
    return CreateMaybeMessage<SingleDriveMotor>(nullptr);
  }

  SingleDriveMotor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SingleDriveMotor>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SingleDriveMotor& from);
  void MergeFrom(const SingleDriveMotor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SingleDriveMotor* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.SingleDriveMotor";
  }
  protected:
  explicit SingleDriveMotor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSnFieldNumber = 1,
    kStateFieldNumber = 2,
    kControllerTemperatureFieldNumber = 3,
    kSpeedFieldNumber = 4,
    kTorqueFieldNumber = 5,
    kTemperatureFieldNumber = 6,
    kControllerInputVoltageFieldNumber = 7,
    kControllerDcBusCurrentFieldNumber = 8,
  };
  // uint32 sn = 1;
  void clear_sn();
  ::PROTOBUF_NAMESPACE_ID::uint32 sn() const;
  void set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sn() const;
  void _internal_set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 state = 2;
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 controller_temperature = 3;
  void clear_controller_temperature();
  ::PROTOBUF_NAMESPACE_ID::uint32 controller_temperature() const;
  void set_controller_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_controller_temperature() const;
  void _internal_set_controller_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 speed = 4;
  void clear_speed();
  ::PROTOBUF_NAMESPACE_ID::uint32 speed() const;
  void set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_speed() const;
  void _internal_set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 torque = 5;
  void clear_torque();
  ::PROTOBUF_NAMESPACE_ID::uint32 torque() const;
  void set_torque(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_torque() const;
  void _internal_set_torque(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 temperature = 6;
  void clear_temperature();
  ::PROTOBUF_NAMESPACE_ID::uint32 temperature() const;
  void set_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_temperature() const;
  void _internal_set_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 controller_input_voltage = 7;
  void clear_controller_input_voltage();
  ::PROTOBUF_NAMESPACE_ID::uint32 controller_input_voltage() const;
  void set_controller_input_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_controller_input_voltage() const;
  void _internal_set_controller_input_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 controller_dc_bus_current = 8;
  void clear_controller_dc_bus_current();
  ::PROTOBUF_NAMESPACE_ID::uint32 controller_dc_bus_current() const;
  void set_controller_dc_bus_current(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_controller_dc_bus_current() const;
  void _internal_set_controller_dc_bus_current(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.SingleDriveMotor)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sn_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 controller_temperature_;
  ::PROTOBUF_NAMESPACE_ID::uint32 speed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 torque_;
  ::PROTOBUF_NAMESPACE_ID::uint32 temperature_;
  ::PROTOBUF_NAMESPACE_ID::uint32 controller_input_voltage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 controller_dc_bus_current_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// -------------------------------------------------------------------

class Position PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.Position) */ {
 public:
  inline Position() : Position(nullptr) {};
  virtual ~Position();

  Position(const Position& from);
  Position(Position&& from) noexcept
    : Position() {
    *this = ::std::move(from);
  }

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  inline Position& operator=(Position&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
               &_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Position& a, Position& b) {
    a.Swap(&b);
  }
  inline void Swap(Position* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Position* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Position* New() const final {
    return CreateMaybeMessage<Position>(nullptr);
  }

  Position* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Position>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Position* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.Position";
  }
  protected:
  explicit Position(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionValidFieldNumber = 1,
    kSouthLatitudeFieldNumber = 2,
    kWestLongitudeFieldNumber = 3,
    kLongitudeFieldNumber = 4,
    kLatitudeFieldNumber = 5,
  };
  // bool position_valid = 1;
  void clear_position_valid();
  bool position_valid() const;
  void set_position_valid(bool value);
  private:
  bool _internal_position_valid() const;
  void _internal_set_position_valid(bool value);
  public:

  // bool south_latitude = 2;
  void clear_south_latitude();
  bool south_latitude() const;
  void set_south_latitude(bool value);
  private:
  bool _internal_south_latitude() const;
  void _internal_set_south_latitude(bool value);
  public:

  // bool west_longitude = 3;
  void clear_west_longitude();
  bool west_longitude() const;
  void set_west_longitude(bool value);
  private:
  bool _internal_west_longitude() const;
  void _internal_set_west_longitude(bool value);
  public:

  // uint32 longitude = 4;
  void clear_longitude();
  ::PROTOBUF_NAMESPACE_ID::uint32 longitude() const;
  void set_longitude(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_longitude() const;
  void _internal_set_longitude(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 latitude = 5;
  void clear_latitude();
  ::PROTOBUF_NAMESPACE_ID::uint32 latitude() const;
  void set_latitude(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_latitude() const;
  void _internal_set_latitude(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.Position)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool position_valid_;
  bool south_latitude_;
  bool west_longitude_;
  ::PROTOBUF_NAMESPACE_ID::uint32 longitude_;
  ::PROTOBUF_NAMESPACE_ID::uint32 latitude_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// -------------------------------------------------------------------

class Extremum PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.Extremum) */ {
 public:
  inline Extremum() : Extremum(nullptr) {};
  virtual ~Extremum();

  Extremum(const Extremum& from);
  Extremum(Extremum&& from) noexcept
    : Extremum() {
    *this = ::std::move(from);
  }

  inline Extremum& operator=(const Extremum& from) {
    CopyFrom(from);
    return *this;
  }
  inline Extremum& operator=(Extremum&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Extremum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Extremum* internal_default_instance() {
    return reinterpret_cast<const Extremum*>(
               &_Extremum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Extremum& a, Extremum& b) {
    a.Swap(&b);
  }
  inline void Swap(Extremum* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Extremum* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Extremum* New() const final {
    return CreateMaybeMessage<Extremum>(nullptr);
  }

  Extremum* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Extremum>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Extremum& from);
  void MergeFrom(const Extremum& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Extremum* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.Extremum";
  }
  protected:
  explicit Extremum(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaxVoltageBatteryDeviceNoFieldNumber = 1,
    kMaxVoltageCellNoFieldNumber = 2,
    kCellMaxVoltageFieldNumber = 3,
    kMinVoltageBatteryDeviceNoFieldNumber = 4,
    kMinVoltageCellNoFieldNumber = 5,
    kCellMinVoltageFieldNumber = 6,
    kMaxTemperatureDeviceNoFieldNumber = 7,
    kMaxTemperatureProbeNoFieldNumber = 8,
    kMaxTemperatureFieldNumber = 9,
    kMinTemperatureDeviceNoFieldNumber = 10,
    kMinTemperatureProbeNoFieldNumber = 11,
    kMinTemperatureFieldNumber = 12,
  };
  // uint32 max_voltage_battery_device_no = 1;
  void clear_max_voltage_battery_device_no();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_voltage_battery_device_no() const;
  void set_max_voltage_battery_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_voltage_battery_device_no() const;
  void _internal_set_max_voltage_battery_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 max_voltage_cell_no = 2;
  void clear_max_voltage_cell_no();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_voltage_cell_no() const;
  void set_max_voltage_cell_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_voltage_cell_no() const;
  void _internal_set_max_voltage_cell_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cell_max_voltage = 3;
  void clear_cell_max_voltage();
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_max_voltage() const;
  void set_cell_max_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cell_max_voltage() const;
  void _internal_set_cell_max_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 min_voltage_battery_device_no = 4;
  void clear_min_voltage_battery_device_no();
  ::PROTOBUF_NAMESPACE_ID::uint32 min_voltage_battery_device_no() const;
  void set_min_voltage_battery_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_min_voltage_battery_device_no() const;
  void _internal_set_min_voltage_battery_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 min_voltage_cell_no = 5;
  void clear_min_voltage_cell_no();
  ::PROTOBUF_NAMESPACE_ID::uint32 min_voltage_cell_no() const;
  void set_min_voltage_cell_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_min_voltage_cell_no() const;
  void _internal_set_min_voltage_cell_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cell_min_voltage = 6;
  void clear_cell_min_voltage();
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_min_voltage() const;
  void set_cell_min_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cell_min_voltage() const;
  void _internal_set_cell_min_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 max_temperature_device_no = 7;
  void clear_max_temperature_device_no();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_temperature_device_no() const;
  void set_max_temperature_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_temperature_device_no() const;
  void _internal_set_max_temperature_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 max_temperature_probe_no = 8;
  void clear_max_temperature_probe_no();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_temperature_probe_no() const;
  void set_max_temperature_probe_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_temperature_probe_no() const;
  void _internal_set_max_temperature_probe_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 max_temperature = 9;
  void clear_max_temperature();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_temperature() const;
  void set_max_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_temperature() const;
  void _internal_set_max_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 min_temperature_device_no = 10;
  void clear_min_temperature_device_no();
  ::PROTOBUF_NAMESPACE_ID::uint32 min_temperature_device_no() const;
  void set_min_temperature_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_min_temperature_device_no() const;
  void _internal_set_min_temperature_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 min_temperature_probe_no = 11;
  void clear_min_temperature_probe_no();
  ::PROTOBUF_NAMESPACE_ID::uint32 min_temperature_probe_no() const;
  void set_min_temperature_probe_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_min_temperature_probe_no() const;
  void _internal_set_min_temperature_probe_no(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 min_temperature = 12;
  void clear_min_temperature();
  ::PROTOBUF_NAMESPACE_ID::uint32 min_temperature() const;
  void set_min_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_min_temperature() const;
  void _internal_set_min_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.Extremum)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_voltage_battery_device_no_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_voltage_cell_no_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_max_voltage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 min_voltage_battery_device_no_;
  ::PROTOBUF_NAMESPACE_ID::uint32 min_voltage_cell_no_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_min_voltage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_temperature_device_no_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_temperature_probe_no_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_temperature_;
  ::PROTOBUF_NAMESPACE_ID::uint32 min_temperature_device_no_;
  ::PROTOBUF_NAMESPACE_ID::uint32 min_temperature_probe_no_;
  ::PROTOBUF_NAMESPACE_ID::uint32 min_temperature_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// -------------------------------------------------------------------

class Alarm PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.Alarm) */ {
 public:
  inline Alarm() : Alarm(nullptr) {};
  virtual ~Alarm();

  Alarm(const Alarm& from);
  Alarm(Alarm&& from) noexcept
    : Alarm() {
    *this = ::std::move(from);
  }

  inline Alarm& operator=(const Alarm& from) {
    CopyFrom(from);
    return *this;
  }
  inline Alarm& operator=(Alarm&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Alarm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Alarm* internal_default_instance() {
    return reinterpret_cast<const Alarm*>(
               &_Alarm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Alarm& a, Alarm& b) {
    a.Swap(&b);
  }
  inline void Swap(Alarm* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Alarm* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Alarm* New() const final {
    return CreateMaybeMessage<Alarm>(nullptr);
  }

  Alarm* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Alarm>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Alarm& from);
  void MergeFrom(const Alarm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Alarm* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.Alarm";
  }
  protected:
  explicit Alarm(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBatteryFaultListFieldNumber = 4,
    kDriveMotorFaultListFieldNumber = 6,
    kEngineFaultListFieldNumber = 8,
    kOtherFaultListFieldNumber = 10,
    kMaxAlarmLevelFieldNumber = 1,
    kAlarmFlagFieldNumber = 2,
    kBatteryFaultCountFieldNumber = 3,
    kDriveMotorFaultCountFieldNumber = 5,
    kEngineFaultCountFieldNumber = 7,
    kOtherFaultCountFieldNumber = 9,
  };
  // repeated uint32 battery_fault_list = 4;
  int battery_fault_list_size() const;
  private:
  int _internal_battery_fault_list_size() const;
  public:
  void clear_battery_fault_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_battery_fault_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_battery_fault_list() const;
  void _internal_add_battery_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_battery_fault_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 battery_fault_list(int index) const;
  void set_battery_fault_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_battery_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      battery_fault_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_battery_fault_list();

  // repeated uint32 drive_motor_fault_list = 6;
  int drive_motor_fault_list_size() const;
  private:
  int _internal_drive_motor_fault_list_size() const;
  public:
  void clear_drive_motor_fault_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_drive_motor_fault_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_drive_motor_fault_list() const;
  void _internal_add_drive_motor_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_drive_motor_fault_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 drive_motor_fault_list(int index) const;
  void set_drive_motor_fault_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_drive_motor_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      drive_motor_fault_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_drive_motor_fault_list();

  // repeated uint32 engine_fault_list = 8;
  int engine_fault_list_size() const;
  private:
  int _internal_engine_fault_list_size() const;
  public:
  void clear_engine_fault_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_engine_fault_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_engine_fault_list() const;
  void _internal_add_engine_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_engine_fault_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 engine_fault_list(int index) const;
  void set_engine_fault_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_engine_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      engine_fault_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_engine_fault_list();

  // repeated uint32 other_fault_list = 10;
  int other_fault_list_size() const;
  private:
  int _internal_other_fault_list_size() const;
  public:
  void clear_other_fault_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_other_fault_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_other_fault_list() const;
  void _internal_add_other_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_other_fault_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 other_fault_list(int index) const;
  void set_other_fault_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_other_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      other_fault_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_other_fault_list();

  // uint32 max_alarm_level = 1;
  void clear_max_alarm_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_alarm_level() const;
  void set_max_alarm_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_alarm_level() const;
  void _internal_set_max_alarm_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 alarm_flag = 2;
  void clear_alarm_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 alarm_flag() const;
  void set_alarm_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_alarm_flag() const;
  void _internal_set_alarm_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 battery_fault_count = 3;
  void clear_battery_fault_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 battery_fault_count() const;
  void set_battery_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_battery_fault_count() const;
  void _internal_set_battery_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 drive_motor_fault_count = 5;
  void clear_drive_motor_fault_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 drive_motor_fault_count() const;
  void set_drive_motor_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_drive_motor_fault_count() const;
  void _internal_set_drive_motor_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 engine_fault_count = 7;
  void clear_engine_fault_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 engine_fault_count() const;
  void set_engine_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_engine_fault_count() const;
  void _internal_set_engine_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 other_fault_count = 9;
  void clear_other_fault_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 other_fault_count() const;
  void set_other_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_other_fault_count() const;
  void _internal_set_other_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.Alarm)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > battery_fault_list_;
  mutable std::atomic<int> _battery_fault_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > drive_motor_fault_list_;
  mutable std::atomic<int> _drive_motor_fault_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > engine_fault_list_;
  mutable std::atomic<int> _engine_fault_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > other_fault_list_;
  mutable std::atomic<int> _other_fault_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_alarm_level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 alarm_flag_;
  ::PROTOBUF_NAMESPACE_ID::uint32 battery_fault_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 drive_motor_fault_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 engine_fault_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 other_fault_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// -------------------------------------------------------------------

class BatteryVoltage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.BatteryVoltage) */ {
 public:
  inline BatteryVoltage() : BatteryVoltage(nullptr) {};
  virtual ~BatteryVoltage();

  BatteryVoltage(const BatteryVoltage& from);
  BatteryVoltage(BatteryVoltage&& from) noexcept
    : BatteryVoltage() {
    *this = ::std::move(from);
  }

  inline BatteryVoltage& operator=(const BatteryVoltage& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatteryVoltage& operator=(BatteryVoltage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BatteryVoltage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatteryVoltage* internal_default_instance() {
    return reinterpret_cast<const BatteryVoltage*>(
               &_BatteryVoltage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(BatteryVoltage& a, BatteryVoltage& b) {
    a.Swap(&b);
  }
  inline void Swap(BatteryVoltage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatteryVoltage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BatteryVoltage* New() const final {
    return CreateMaybeMessage<BatteryVoltage>(nullptr);
  }

  BatteryVoltage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BatteryVoltage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BatteryVoltage& from);
  void MergeFrom(const BatteryVoltage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatteryVoltage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.BatteryVoltage";
  }
  protected:
  explicit BatteryVoltage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBatteryVoltageListFieldNumber = 2,
    kBatteryCountFieldNumber = 1,
  };
  // repeated .tbox.mcu.rsms.v1.SingleBatteryVoltage battery_voltage_list = 2;
  int battery_voltage_list_size() const;
  private:
  int _internal_battery_voltage_list_size() const;
  public:
  void clear_battery_voltage_list();
  ::tbox::mcu::rsms::v1::SingleBatteryVoltage* mutable_battery_voltage_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleBatteryVoltage >*
      mutable_battery_voltage_list();
  private:
  const ::tbox::mcu::rsms::v1::SingleBatteryVoltage& _internal_battery_voltage_list(int index) const;
  ::tbox::mcu::rsms::v1::SingleBatteryVoltage* _internal_add_battery_voltage_list();
  public:
  const ::tbox::mcu::rsms::v1::SingleBatteryVoltage& battery_voltage_list(int index) const;
  ::tbox::mcu::rsms::v1::SingleBatteryVoltage* add_battery_voltage_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleBatteryVoltage >&
      battery_voltage_list() const;

  // uint32 battery_count = 1;
  void clear_battery_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 battery_count() const;
  void set_battery_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_battery_count() const;
  void _internal_set_battery_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.BatteryVoltage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleBatteryVoltage > battery_voltage_list_;
  ::PROTOBUF_NAMESPACE_ID::uint32 battery_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// -------------------------------------------------------------------

class SingleBatteryVoltage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.SingleBatteryVoltage) */ {
 public:
  inline SingleBatteryVoltage() : SingleBatteryVoltage(nullptr) {};
  virtual ~SingleBatteryVoltage();

  SingleBatteryVoltage(const SingleBatteryVoltage& from);
  SingleBatteryVoltage(SingleBatteryVoltage&& from) noexcept
    : SingleBatteryVoltage() {
    *this = ::std::move(from);
  }

  inline SingleBatteryVoltage& operator=(const SingleBatteryVoltage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SingleBatteryVoltage& operator=(SingleBatteryVoltage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SingleBatteryVoltage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SingleBatteryVoltage* internal_default_instance() {
    return reinterpret_cast<const SingleBatteryVoltage*>(
               &_SingleBatteryVoltage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SingleBatteryVoltage& a, SingleBatteryVoltage& b) {
    a.Swap(&b);
  }
  inline void Swap(SingleBatteryVoltage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SingleBatteryVoltage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SingleBatteryVoltage* New() const final {
    return CreateMaybeMessage<SingleBatteryVoltage>(nullptr);
  }

  SingleBatteryVoltage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SingleBatteryVoltage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SingleBatteryVoltage& from);
  void MergeFrom(const SingleBatteryVoltage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SingleBatteryVoltage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.SingleBatteryVoltage";
  }
  protected:
  explicit SingleBatteryVoltage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCellVoltageListFieldNumber = 7,
    kSnFieldNumber = 1,
    kVoltageFieldNumber = 2,
    kCurrentFieldNumber = 3,
    kCellCountFieldNumber = 4,
    kFrameStartCellSnFieldNumber = 5,
    kFrameCellCountFieldNumber = 6,
  };
  // repeated uint32 cell_voltage_list = 7;
  int cell_voltage_list_size() const;
  private:
  int _internal_cell_voltage_list_size() const;
  public:
  void clear_cell_voltage_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cell_voltage_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_cell_voltage_list() const;
  void _internal_add_cell_voltage_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_cell_voltage_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_voltage_list(int index) const;
  void set_cell_voltage_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_cell_voltage_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      cell_voltage_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_cell_voltage_list();

  // uint32 sn = 1;
  void clear_sn();
  ::PROTOBUF_NAMESPACE_ID::uint32 sn() const;
  void set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sn() const;
  void _internal_set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 voltage = 2;
  void clear_voltage();
  ::PROTOBUF_NAMESPACE_ID::uint32 voltage() const;
  void set_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_voltage() const;
  void _internal_set_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current = 3;
  void clear_current();
  ::PROTOBUF_NAMESPACE_ID::uint32 current() const;
  void set_current(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current() const;
  void _internal_set_current(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cell_count = 4;
  void clear_cell_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_count() const;
  void set_cell_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cell_count() const;
  void _internal_set_cell_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 frame_start_cell_sn = 5;
  void clear_frame_start_cell_sn();
  ::PROTOBUF_NAMESPACE_ID::uint32 frame_start_cell_sn() const;
  void set_frame_start_cell_sn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_frame_start_cell_sn() const;
  void _internal_set_frame_start_cell_sn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 frame_cell_count = 6;
  void clear_frame_cell_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 frame_cell_count() const;
  void set_frame_cell_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_frame_cell_count() const;
  void _internal_set_frame_cell_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.SingleBatteryVoltage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > cell_voltage_list_;
  mutable std::atomic<int> _cell_voltage_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sn_;
  ::PROTOBUF_NAMESPACE_ID::uint32 voltage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 frame_start_cell_sn_;
  ::PROTOBUF_NAMESPACE_ID::uint32 frame_cell_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// -------------------------------------------------------------------

class BatteryTemperature PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.BatteryTemperature) */ {
 public:
  inline BatteryTemperature() : BatteryTemperature(nullptr) {};
  virtual ~BatteryTemperature();

  BatteryTemperature(const BatteryTemperature& from);
  BatteryTemperature(BatteryTemperature&& from) noexcept
    : BatteryTemperature() {
    *this = ::std::move(from);
  }

  inline BatteryTemperature& operator=(const BatteryTemperature& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatteryTemperature& operator=(BatteryTemperature&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BatteryTemperature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatteryTemperature* internal_default_instance() {
    return reinterpret_cast<const BatteryTemperature*>(
               &_BatteryTemperature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(BatteryTemperature& a, BatteryTemperature& b) {
    a.Swap(&b);
  }
  inline void Swap(BatteryTemperature* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatteryTemperature* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BatteryTemperature* New() const final {
    return CreateMaybeMessage<BatteryTemperature>(nullptr);
  }

  BatteryTemperature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BatteryTemperature>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BatteryTemperature& from);
  void MergeFrom(const BatteryTemperature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatteryTemperature* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.BatteryTemperature";
  }
  protected:
  explicit BatteryTemperature(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBatteryTemperatureListFieldNumber = 2,
    kBatteryCountFieldNumber = 1,
  };
  // repeated .tbox.mcu.rsms.v1.SingleBatteryTemperature battery_temperature_list = 2;
  int battery_temperature_list_size() const;
  private:
  int _internal_battery_temperature_list_size() const;
  public:
  void clear_battery_temperature_list();
  ::tbox::mcu::rsms::v1::SingleBatteryTemperature* mutable_battery_temperature_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleBatteryTemperature >*
      mutable_battery_temperature_list();
  private:
  const ::tbox::mcu::rsms::v1::SingleBatteryTemperature& _internal_battery_temperature_list(int index) const;
  ::tbox::mcu::rsms::v1::SingleBatteryTemperature* _internal_add_battery_temperature_list();
  public:
  const ::tbox::mcu::rsms::v1::SingleBatteryTemperature& battery_temperature_list(int index) const;
  ::tbox::mcu::rsms::v1::SingleBatteryTemperature* add_battery_temperature_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleBatteryTemperature >&
      battery_temperature_list() const;

  // uint32 battery_count = 1;
  void clear_battery_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 battery_count() const;
  void set_battery_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_battery_count() const;
  void _internal_set_battery_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.BatteryTemperature)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleBatteryTemperature > battery_temperature_list_;
  ::PROTOBUF_NAMESPACE_ID::uint32 battery_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// -------------------------------------------------------------------

class SingleBatteryTemperature PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.SingleBatteryTemperature) */ {
 public:
  inline SingleBatteryTemperature() : SingleBatteryTemperature(nullptr) {};
  virtual ~SingleBatteryTemperature();

  SingleBatteryTemperature(const SingleBatteryTemperature& from);
  SingleBatteryTemperature(SingleBatteryTemperature&& from) noexcept
    : SingleBatteryTemperature() {
    *this = ::std::move(from);
  }

  inline SingleBatteryTemperature& operator=(const SingleBatteryTemperature& from) {
    CopyFrom(from);
    return *this;
  }
  inline SingleBatteryTemperature& operator=(SingleBatteryTemperature&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SingleBatteryTemperature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SingleBatteryTemperature* internal_default_instance() {
    return reinterpret_cast<const SingleBatteryTemperature*>(
               &_SingleBatteryTemperature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SingleBatteryTemperature& a, SingleBatteryTemperature& b) {
    a.Swap(&b);
  }
  inline void Swap(SingleBatteryTemperature* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SingleBatteryTemperature* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SingleBatteryTemperature* New() const final {
    return CreateMaybeMessage<SingleBatteryTemperature>(nullptr);
  }

  SingleBatteryTemperature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SingleBatteryTemperature>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SingleBatteryTemperature& from);
  void MergeFrom(const SingleBatteryTemperature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SingleBatteryTemperature* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.SingleBatteryTemperature";
  }
  protected:
  explicit SingleBatteryTemperature(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTemperaturesFieldNumber = 3,
    kSnFieldNumber = 1,
    kProbeCountFieldNumber = 2,
  };
  // repeated uint32 temperatures = 3;
  int temperatures_size() const;
  private:
  int _internal_temperatures_size() const;
  public:
  void clear_temperatures();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_temperatures(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_temperatures() const;
  void _internal_add_temperatures(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_temperatures();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 temperatures(int index) const;
  void set_temperatures(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_temperatures(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      temperatures() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_temperatures();

  // uint32 sn = 1;
  void clear_sn();
  ::PROTOBUF_NAMESPACE_ID::uint32 sn() const;
  void set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sn() const;
  void _internal_set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 probe_count = 2;
  void clear_probe_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 probe_count() const;
  void set_probe_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_probe_count() const;
  void _internal_set_probe_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.SingleBatteryTemperature)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > temperatures_;
  mutable std::atomic<int> _temperatures_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sn_;
  ::PROTOBUF_NAMESPACE_ID::uint32 probe_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// -------------------------------------------------------------------

class RsmsData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tbox.mcu.rsms.v1.RsmsData) */ {
 public:
  inline RsmsData() : RsmsData(nullptr) {};
  virtual ~RsmsData();

  RsmsData(const RsmsData& from);
  RsmsData(RsmsData&& from) noexcept
    : RsmsData() {
    *this = ::std::move(from);
  }

  inline RsmsData& operator=(const RsmsData& from) {
    CopyFrom(from);
    return *this;
  }
  inline RsmsData& operator=(RsmsData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RsmsData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RsmsData* internal_default_instance() {
    return reinterpret_cast<const RsmsData*>(
               &_RsmsData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(RsmsData& a, RsmsData& b) {
    a.Swap(&b);
  }
  inline void Swap(RsmsData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RsmsData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RsmsData* New() const final {
    return CreateMaybeMessage<RsmsData>(nullptr);
  }

  RsmsData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RsmsData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RsmsData& from);
  void MergeFrom(const RsmsData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RsmsData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tbox.mcu.rsms.v1.RsmsData";
  }
  protected:
  explicit RsmsData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rsms_5fdata_5fv1_2eproto);
    return ::descriptor_table_rsms_5fdata_5fv1_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVehicleDataFieldNumber = 1,
    kDriveMotorFieldNumber = 2,
    kPositionFieldNumber = 3,
    kExtremumFieldNumber = 4,
    kAlarmFieldNumber = 5,
    kBatteryVoltageFieldNumber = 6,
    kBatteryTemperatureFieldNumber = 7,
  };
  // .tbox.mcu.rsms.v1.VehicleData vehicle_data = 1;
  bool has_vehicle_data() const;
  private:
  bool _internal_has_vehicle_data() const;
  public:
  void clear_vehicle_data();
  const ::tbox::mcu::rsms::v1::VehicleData& vehicle_data() const;
  ::tbox::mcu::rsms::v1::VehicleData* release_vehicle_data();
  ::tbox::mcu::rsms::v1::VehicleData* mutable_vehicle_data();
  void set_allocated_vehicle_data(::tbox::mcu::rsms::v1::VehicleData* vehicle_data);
  private:
  const ::tbox::mcu::rsms::v1::VehicleData& _internal_vehicle_data() const;
  ::tbox::mcu::rsms::v1::VehicleData* _internal_mutable_vehicle_data();
  public:
  void unsafe_arena_set_allocated_vehicle_data(
      ::tbox::mcu::rsms::v1::VehicleData* vehicle_data);
  ::tbox::mcu::rsms::v1::VehicleData* unsafe_arena_release_vehicle_data();

  // .tbox.mcu.rsms.v1.DriveMotor drive_motor = 2;
  bool has_drive_motor() const;
  private:
  bool _internal_has_drive_motor() const;
  public:
  void clear_drive_motor();
  const ::tbox::mcu::rsms::v1::DriveMotor& drive_motor() const;
  ::tbox::mcu::rsms::v1::DriveMotor* release_drive_motor();
  ::tbox::mcu::rsms::v1::DriveMotor* mutable_drive_motor();
  void set_allocated_drive_motor(::tbox::mcu::rsms::v1::DriveMotor* drive_motor);
  private:
  const ::tbox::mcu::rsms::v1::DriveMotor& _internal_drive_motor() const;
  ::tbox::mcu::rsms::v1::DriveMotor* _internal_mutable_drive_motor();
  public:
  void unsafe_arena_set_allocated_drive_motor(
      ::tbox::mcu::rsms::v1::DriveMotor* drive_motor);
  ::tbox::mcu::rsms::v1::DriveMotor* unsafe_arena_release_drive_motor();

  // .tbox.mcu.rsms.v1.Position position = 3;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::tbox::mcu::rsms::v1::Position& position() const;
  ::tbox::mcu::rsms::v1::Position* release_position();
  ::tbox::mcu::rsms::v1::Position* mutable_position();
  void set_allocated_position(::tbox::mcu::rsms::v1::Position* position);
  private:
  const ::tbox::mcu::rsms::v1::Position& _internal_position() const;
  ::tbox::mcu::rsms::v1::Position* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::tbox::mcu::rsms::v1::Position* position);
  ::tbox::mcu::rsms::v1::Position* unsafe_arena_release_position();

  // .tbox.mcu.rsms.v1.Extremum extremum = 4;
  bool has_extremum() const;
  private:
  bool _internal_has_extremum() const;
  public:
  void clear_extremum();
  const ::tbox::mcu::rsms::v1::Extremum& extremum() const;
  ::tbox::mcu::rsms::v1::Extremum* release_extremum();
  ::tbox::mcu::rsms::v1::Extremum* mutable_extremum();
  void set_allocated_extremum(::tbox::mcu::rsms::v1::Extremum* extremum);
  private:
  const ::tbox::mcu::rsms::v1::Extremum& _internal_extremum() const;
  ::tbox::mcu::rsms::v1::Extremum* _internal_mutable_extremum();
  public:
  void unsafe_arena_set_allocated_extremum(
      ::tbox::mcu::rsms::v1::Extremum* extremum);
  ::tbox::mcu::rsms::v1::Extremum* unsafe_arena_release_extremum();

  // .tbox.mcu.rsms.v1.Alarm alarm = 5;
  bool has_alarm() const;
  private:
  bool _internal_has_alarm() const;
  public:
  void clear_alarm();
  const ::tbox::mcu::rsms::v1::Alarm& alarm() const;
  ::tbox::mcu::rsms::v1::Alarm* release_alarm();
  ::tbox::mcu::rsms::v1::Alarm* mutable_alarm();
  void set_allocated_alarm(::tbox::mcu::rsms::v1::Alarm* alarm);
  private:
  const ::tbox::mcu::rsms::v1::Alarm& _internal_alarm() const;
  ::tbox::mcu::rsms::v1::Alarm* _internal_mutable_alarm();
  public:
  void unsafe_arena_set_allocated_alarm(
      ::tbox::mcu::rsms::v1::Alarm* alarm);
  ::tbox::mcu::rsms::v1::Alarm* unsafe_arena_release_alarm();

  // .tbox.mcu.rsms.v1.BatteryVoltage battery_voltage = 6;
  bool has_battery_voltage() const;
  private:
  bool _internal_has_battery_voltage() const;
  public:
  void clear_battery_voltage();
  const ::tbox::mcu::rsms::v1::BatteryVoltage& battery_voltage() const;
  ::tbox::mcu::rsms::v1::BatteryVoltage* release_battery_voltage();
  ::tbox::mcu::rsms::v1::BatteryVoltage* mutable_battery_voltage();
  void set_allocated_battery_voltage(::tbox::mcu::rsms::v1::BatteryVoltage* battery_voltage);
  private:
  const ::tbox::mcu::rsms::v1::BatteryVoltage& _internal_battery_voltage() const;
  ::tbox::mcu::rsms::v1::BatteryVoltage* _internal_mutable_battery_voltage();
  public:
  void unsafe_arena_set_allocated_battery_voltage(
      ::tbox::mcu::rsms::v1::BatteryVoltage* battery_voltage);
  ::tbox::mcu::rsms::v1::BatteryVoltage* unsafe_arena_release_battery_voltage();

  // .tbox.mcu.rsms.v1.BatteryTemperature battery_temperature = 7;
  bool has_battery_temperature() const;
  private:
  bool _internal_has_battery_temperature() const;
  public:
  void clear_battery_temperature();
  const ::tbox::mcu::rsms::v1::BatteryTemperature& battery_temperature() const;
  ::tbox::mcu::rsms::v1::BatteryTemperature* release_battery_temperature();
  ::tbox::mcu::rsms::v1::BatteryTemperature* mutable_battery_temperature();
  void set_allocated_battery_temperature(::tbox::mcu::rsms::v1::BatteryTemperature* battery_temperature);
  private:
  const ::tbox::mcu::rsms::v1::BatteryTemperature& _internal_battery_temperature() const;
  ::tbox::mcu::rsms::v1::BatteryTemperature* _internal_mutable_battery_temperature();
  public:
  void unsafe_arena_set_allocated_battery_temperature(
      ::tbox::mcu::rsms::v1::BatteryTemperature* battery_temperature);
  ::tbox::mcu::rsms::v1::BatteryTemperature* unsafe_arena_release_battery_temperature();

  // @@protoc_insertion_point(class_scope:tbox.mcu.rsms.v1.RsmsData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::tbox::mcu::rsms::v1::VehicleData* vehicle_data_;
  ::tbox::mcu::rsms::v1::DriveMotor* drive_motor_;
  ::tbox::mcu::rsms::v1::Position* position_;
  ::tbox::mcu::rsms::v1::Extremum* extremum_;
  ::tbox::mcu::rsms::v1::Alarm* alarm_;
  ::tbox::mcu::rsms::v1::BatteryVoltage* battery_voltage_;
  ::tbox::mcu::rsms::v1::BatteryTemperature* battery_temperature_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rsms_5fdata_5fv1_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VehicleData

// uint32 vehicle_state = 1;
inline void VehicleData::clear_vehicle_state() {
  vehicle_state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_vehicle_state() const {
  return vehicle_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::vehicle_state() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.vehicle_state)
  return _internal_vehicle_state();
}
inline void VehicleData::_internal_set_vehicle_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  vehicle_state_ = value;
}
inline void VehicleData::set_vehicle_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_vehicle_state(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.vehicle_state)
}

// uint32 charging_state = 2;
inline void VehicleData::clear_charging_state() {
  charging_state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_charging_state() const {
  return charging_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::charging_state() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.charging_state)
  return _internal_charging_state();
}
inline void VehicleData::_internal_set_charging_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  charging_state_ = value;
}
inline void VehicleData::set_charging_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_charging_state(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.charging_state)
}

// uint32 running_mode = 3;
inline void VehicleData::clear_running_mode() {
  running_mode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_running_mode() const {
  return running_mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::running_mode() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.running_mode)
  return _internal_running_mode();
}
inline void VehicleData::_internal_set_running_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  running_mode_ = value;
}
inline void VehicleData::set_running_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_running_mode(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.running_mode)
}

// uint32 speed = 4;
inline void VehicleData::clear_speed() {
  speed_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_speed() const {
  return speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::speed() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.speed)
  return _internal_speed();
}
inline void VehicleData::_internal_set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  speed_ = value;
}
inline void VehicleData::set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.speed)
}

// uint32 total_odometer = 5;
inline void VehicleData::clear_total_odometer() {
  total_odometer_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_total_odometer() const {
  return total_odometer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::total_odometer() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.total_odometer)
  return _internal_total_odometer();
}
inline void VehicleData::_internal_set_total_odometer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  total_odometer_ = value;
}
inline void VehicleData::set_total_odometer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_odometer(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.total_odometer)
}

// uint32 total_voltage = 6;
inline void VehicleData::clear_total_voltage() {
  total_voltage_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_total_voltage() const {
  return total_voltage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::total_voltage() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.total_voltage)
  return _internal_total_voltage();
}
inline void VehicleData::_internal_set_total_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  total_voltage_ = value;
}
inline void VehicleData::set_total_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_voltage(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.total_voltage)
}

// uint32 total_current = 7;
inline void VehicleData::clear_total_current() {
  total_current_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_total_current() const {
  return total_current_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::total_current() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.total_current)
  return _internal_total_current();
}
inline void VehicleData::_internal_set_total_current(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  total_current_ = value;
}
inline void VehicleData::set_total_current(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_current(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.total_current)
}

// uint32 soc = 8;
inline void VehicleData::clear_soc() {
  soc_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_soc() const {
  return soc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::soc() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.soc)
  return _internal_soc();
}
inline void VehicleData::_internal_set_soc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  soc_ = value;
}
inline void VehicleData::set_soc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_soc(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.soc)
}

// uint32 dcdc_state = 9;
inline void VehicleData::clear_dcdc_state() {
  dcdc_state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_dcdc_state() const {
  return dcdc_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::dcdc_state() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.dcdc_state)
  return _internal_dcdc_state();
}
inline void VehicleData::_internal_set_dcdc_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dcdc_state_ = value;
}
inline void VehicleData::set_dcdc_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dcdc_state(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.dcdc_state)
}

// bool driving = 10;
inline void VehicleData::clear_driving() {
  driving_ = false;
}
inline bool VehicleData::_internal_driving() const {
  return driving_;
}
inline bool VehicleData::driving() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.driving)
  return _internal_driving();
}
inline void VehicleData::_internal_set_driving(bool value) {
  
  driving_ = value;
}
inline void VehicleData::set_driving(bool value) {
  _internal_set_driving(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.driving)
}

// bool braking = 11;
inline void VehicleData::clear_braking() {
  braking_ = false;
}
inline bool VehicleData::_internal_braking() const {
  return braking_;
}
inline bool VehicleData::braking() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.braking)
  return _internal_braking();
}
inline void VehicleData::_internal_set_braking(bool value) {
  
  braking_ = value;
}
inline void VehicleData::set_braking(bool value) {
  _internal_set_braking(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.braking)
}

// uint32 gear = 12;
inline void VehicleData::clear_gear() {
  gear_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_gear() const {
  return gear_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::gear() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.gear)
  return _internal_gear();
}
inline void VehicleData::_internal_set_gear(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  gear_ = value;
}
inline void VehicleData::set_gear(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gear(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.gear)
}

// uint32 insulation_resistance = 13;
inline void VehicleData::clear_insulation_resistance() {
  insulation_resistance_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_insulation_resistance() const {
  return insulation_resistance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::insulation_resistance() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.insulation_resistance)
  return _internal_insulation_resistance();
}
inline void VehicleData::_internal_set_insulation_resistance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  insulation_resistance_ = value;
}
inline void VehicleData::set_insulation_resistance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_insulation_resistance(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.insulation_resistance)
}

// uint32 accelerator_pedal_position = 14;
inline void VehicleData::clear_accelerator_pedal_position() {
  accelerator_pedal_position_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_accelerator_pedal_position() const {
  return accelerator_pedal_position_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::accelerator_pedal_position() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.accelerator_pedal_position)
  return _internal_accelerator_pedal_position();
}
inline void VehicleData::_internal_set_accelerator_pedal_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  accelerator_pedal_position_ = value;
}
inline void VehicleData::set_accelerator_pedal_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accelerator_pedal_position(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.accelerator_pedal_position)
}

// uint32 brake_pedal_position = 15;
inline void VehicleData::clear_brake_pedal_position() {
  brake_pedal_position_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::_internal_brake_pedal_position() const {
  return brake_pedal_position_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleData::brake_pedal_position() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.VehicleData.brake_pedal_position)
  return _internal_brake_pedal_position();
}
inline void VehicleData::_internal_set_brake_pedal_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  brake_pedal_position_ = value;
}
inline void VehicleData::set_brake_pedal_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brake_pedal_position(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.VehicleData.brake_pedal_position)
}

// -------------------------------------------------------------------

// DriveMotor

// uint32 drive_motor_count = 1;
inline void DriveMotor::clear_drive_motor_count() {
  drive_motor_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DriveMotor::_internal_drive_motor_count() const {
  return drive_motor_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DriveMotor::drive_motor_count() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.DriveMotor.drive_motor_count)
  return _internal_drive_motor_count();
}
inline void DriveMotor::_internal_set_drive_motor_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  drive_motor_count_ = value;
}
inline void DriveMotor::set_drive_motor_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_drive_motor_count(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.DriveMotor.drive_motor_count)
}

// repeated .tbox.mcu.rsms.v1.SingleDriveMotor drive_motor_list = 2;
inline int DriveMotor::_internal_drive_motor_list_size() const {
  return drive_motor_list_.size();
}
inline int DriveMotor::drive_motor_list_size() const {
  return _internal_drive_motor_list_size();
}
inline void DriveMotor::clear_drive_motor_list() {
  drive_motor_list_.Clear();
}
inline ::tbox::mcu::rsms::v1::SingleDriveMotor* DriveMotor::mutable_drive_motor_list(int index) {
  // @@protoc_insertion_point(field_mutable:tbox.mcu.rsms.v1.DriveMotor.drive_motor_list)
  return drive_motor_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleDriveMotor >*
DriveMotor::mutable_drive_motor_list() {
  // @@protoc_insertion_point(field_mutable_list:tbox.mcu.rsms.v1.DriveMotor.drive_motor_list)
  return &drive_motor_list_;
}
inline const ::tbox::mcu::rsms::v1::SingleDriveMotor& DriveMotor::_internal_drive_motor_list(int index) const {
  return drive_motor_list_.Get(index);
}
inline const ::tbox::mcu::rsms::v1::SingleDriveMotor& DriveMotor::drive_motor_list(int index) const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.DriveMotor.drive_motor_list)
  return _internal_drive_motor_list(index);
}
inline ::tbox::mcu::rsms::v1::SingleDriveMotor* DriveMotor::_internal_add_drive_motor_list() {
  return drive_motor_list_.Add();
}
inline ::tbox::mcu::rsms::v1::SingleDriveMotor* DriveMotor::add_drive_motor_list() {
  // @@protoc_insertion_point(field_add:tbox.mcu.rsms.v1.DriveMotor.drive_motor_list)
  return _internal_add_drive_motor_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleDriveMotor >&
DriveMotor::drive_motor_list() const {
  // @@protoc_insertion_point(field_list:tbox.mcu.rsms.v1.DriveMotor.drive_motor_list)
  return drive_motor_list_;
}

// -------------------------------------------------------------------

// SingleDriveMotor

// uint32 sn = 1;
inline void SingleDriveMotor::clear_sn() {
  sn_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::_internal_sn() const {
  return sn_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::sn() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleDriveMotor.sn)
  return _internal_sn();
}
inline void SingleDriveMotor::_internal_set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sn_ = value;
}
inline void SingleDriveMotor::set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sn(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleDriveMotor.sn)
}

// uint32 state = 2;
inline void SingleDriveMotor::clear_state() {
  state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::state() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleDriveMotor.state)
  return _internal_state();
}
inline void SingleDriveMotor::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  state_ = value;
}
inline void SingleDriveMotor::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleDriveMotor.state)
}

// uint32 controller_temperature = 3;
inline void SingleDriveMotor::clear_controller_temperature() {
  controller_temperature_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::_internal_controller_temperature() const {
  return controller_temperature_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::controller_temperature() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleDriveMotor.controller_temperature)
  return _internal_controller_temperature();
}
inline void SingleDriveMotor::_internal_set_controller_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  controller_temperature_ = value;
}
inline void SingleDriveMotor::set_controller_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_controller_temperature(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleDriveMotor.controller_temperature)
}

// uint32 speed = 4;
inline void SingleDriveMotor::clear_speed() {
  speed_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::_internal_speed() const {
  return speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::speed() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleDriveMotor.speed)
  return _internal_speed();
}
inline void SingleDriveMotor::_internal_set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  speed_ = value;
}
inline void SingleDriveMotor::set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleDriveMotor.speed)
}

// uint32 torque = 5;
inline void SingleDriveMotor::clear_torque() {
  torque_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::_internal_torque() const {
  return torque_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::torque() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleDriveMotor.torque)
  return _internal_torque();
}
inline void SingleDriveMotor::_internal_set_torque(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  torque_ = value;
}
inline void SingleDriveMotor::set_torque(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_torque(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleDriveMotor.torque)
}

// uint32 temperature = 6;
inline void SingleDriveMotor::clear_temperature() {
  temperature_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::_internal_temperature() const {
  return temperature_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::temperature() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleDriveMotor.temperature)
  return _internal_temperature();
}
inline void SingleDriveMotor::_internal_set_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  temperature_ = value;
}
inline void SingleDriveMotor::set_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_temperature(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleDriveMotor.temperature)
}

// uint32 controller_input_voltage = 7;
inline void SingleDriveMotor::clear_controller_input_voltage() {
  controller_input_voltage_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::_internal_controller_input_voltage() const {
  return controller_input_voltage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::controller_input_voltage() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleDriveMotor.controller_input_voltage)
  return _internal_controller_input_voltage();
}
inline void SingleDriveMotor::_internal_set_controller_input_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  controller_input_voltage_ = value;
}
inline void SingleDriveMotor::set_controller_input_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_controller_input_voltage(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleDriveMotor.controller_input_voltage)
}

// uint32 controller_dc_bus_current = 8;
inline void SingleDriveMotor::clear_controller_dc_bus_current() {
  controller_dc_bus_current_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::_internal_controller_dc_bus_current() const {
  return controller_dc_bus_current_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleDriveMotor::controller_dc_bus_current() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleDriveMotor.controller_dc_bus_current)
  return _internal_controller_dc_bus_current();
}
inline void SingleDriveMotor::_internal_set_controller_dc_bus_current(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  controller_dc_bus_current_ = value;
}
inline void SingleDriveMotor::set_controller_dc_bus_current(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_controller_dc_bus_current(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleDriveMotor.controller_dc_bus_current)
}

// -------------------------------------------------------------------

// Position

// bool position_valid = 1;
inline void Position::clear_position_valid() {
  position_valid_ = false;
}
inline bool Position::_internal_position_valid() const {
  return position_valid_;
}
inline bool Position::position_valid() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Position.position_valid)
  return _internal_position_valid();
}
inline void Position::_internal_set_position_valid(bool value) {
  
  position_valid_ = value;
}
inline void Position::set_position_valid(bool value) {
  _internal_set_position_valid(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Position.position_valid)
}

// bool south_latitude = 2;
inline void Position::clear_south_latitude() {
  south_latitude_ = false;
}
inline bool Position::_internal_south_latitude() const {
  return south_latitude_;
}
inline bool Position::south_latitude() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Position.south_latitude)
  return _internal_south_latitude();
}
inline void Position::_internal_set_south_latitude(bool value) {
  
  south_latitude_ = value;
}
inline void Position::set_south_latitude(bool value) {
  _internal_set_south_latitude(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Position.south_latitude)
}

// bool west_longitude = 3;
inline void Position::clear_west_longitude() {
  west_longitude_ = false;
}
inline bool Position::_internal_west_longitude() const {
  return west_longitude_;
}
inline bool Position::west_longitude() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Position.west_longitude)
  return _internal_west_longitude();
}
inline void Position::_internal_set_west_longitude(bool value) {
  
  west_longitude_ = value;
}
inline void Position::set_west_longitude(bool value) {
  _internal_set_west_longitude(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Position.west_longitude)
}

// uint32 longitude = 4;
inline void Position::clear_longitude() {
  longitude_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Position::_internal_longitude() const {
  return longitude_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Position::longitude() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Position.longitude)
  return _internal_longitude();
}
inline void Position::_internal_set_longitude(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  longitude_ = value;
}
inline void Position::set_longitude(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Position.longitude)
}

// uint32 latitude = 5;
inline void Position::clear_latitude() {
  latitude_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Position::_internal_latitude() const {
  return latitude_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Position::latitude() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Position.latitude)
  return _internal_latitude();
}
inline void Position::_internal_set_latitude(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  latitude_ = value;
}
inline void Position::set_latitude(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Position.latitude)
}

// -------------------------------------------------------------------

// Extremum

// uint32 max_voltage_battery_device_no = 1;
inline void Extremum::clear_max_voltage_battery_device_no() {
  max_voltage_battery_device_no_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_max_voltage_battery_device_no() const {
  return max_voltage_battery_device_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::max_voltage_battery_device_no() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.max_voltage_battery_device_no)
  return _internal_max_voltage_battery_device_no();
}
inline void Extremum::_internal_set_max_voltage_battery_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  max_voltage_battery_device_no_ = value;
}
inline void Extremum::set_max_voltage_battery_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_voltage_battery_device_no(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.max_voltage_battery_device_no)
}

// uint32 max_voltage_cell_no = 2;
inline void Extremum::clear_max_voltage_cell_no() {
  max_voltage_cell_no_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_max_voltage_cell_no() const {
  return max_voltage_cell_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::max_voltage_cell_no() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.max_voltage_cell_no)
  return _internal_max_voltage_cell_no();
}
inline void Extremum::_internal_set_max_voltage_cell_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  max_voltage_cell_no_ = value;
}
inline void Extremum::set_max_voltage_cell_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_voltage_cell_no(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.max_voltage_cell_no)
}

// uint32 cell_max_voltage = 3;
inline void Extremum::clear_cell_max_voltage() {
  cell_max_voltage_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_cell_max_voltage() const {
  return cell_max_voltage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::cell_max_voltage() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.cell_max_voltage)
  return _internal_cell_max_voltage();
}
inline void Extremum::_internal_set_cell_max_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cell_max_voltage_ = value;
}
inline void Extremum::set_cell_max_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cell_max_voltage(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.cell_max_voltage)
}

// uint32 min_voltage_battery_device_no = 4;
inline void Extremum::clear_min_voltage_battery_device_no() {
  min_voltage_battery_device_no_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_min_voltage_battery_device_no() const {
  return min_voltage_battery_device_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::min_voltage_battery_device_no() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.min_voltage_battery_device_no)
  return _internal_min_voltage_battery_device_no();
}
inline void Extremum::_internal_set_min_voltage_battery_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  min_voltage_battery_device_no_ = value;
}
inline void Extremum::set_min_voltage_battery_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_min_voltage_battery_device_no(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.min_voltage_battery_device_no)
}

// uint32 min_voltage_cell_no = 5;
inline void Extremum::clear_min_voltage_cell_no() {
  min_voltage_cell_no_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_min_voltage_cell_no() const {
  return min_voltage_cell_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::min_voltage_cell_no() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.min_voltage_cell_no)
  return _internal_min_voltage_cell_no();
}
inline void Extremum::_internal_set_min_voltage_cell_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  min_voltage_cell_no_ = value;
}
inline void Extremum::set_min_voltage_cell_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_min_voltage_cell_no(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.min_voltage_cell_no)
}

// uint32 cell_min_voltage = 6;
inline void Extremum::clear_cell_min_voltage() {
  cell_min_voltage_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_cell_min_voltage() const {
  return cell_min_voltage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::cell_min_voltage() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.cell_min_voltage)
  return _internal_cell_min_voltage();
}
inline void Extremum::_internal_set_cell_min_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cell_min_voltage_ = value;
}
inline void Extremum::set_cell_min_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cell_min_voltage(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.cell_min_voltage)
}

// uint32 max_temperature_device_no = 7;
inline void Extremum::clear_max_temperature_device_no() {
  max_temperature_device_no_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_max_temperature_device_no() const {
  return max_temperature_device_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::max_temperature_device_no() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.max_temperature_device_no)
  return _internal_max_temperature_device_no();
}
inline void Extremum::_internal_set_max_temperature_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  max_temperature_device_no_ = value;
}
inline void Extremum::set_max_temperature_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_temperature_device_no(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.max_temperature_device_no)
}

// uint32 max_temperature_probe_no = 8;
inline void Extremum::clear_max_temperature_probe_no() {
  max_temperature_probe_no_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_max_temperature_probe_no() const {
  return max_temperature_probe_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::max_temperature_probe_no() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.max_temperature_probe_no)
  return _internal_max_temperature_probe_no();
}
inline void Extremum::_internal_set_max_temperature_probe_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  max_temperature_probe_no_ = value;
}
inline void Extremum::set_max_temperature_probe_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_temperature_probe_no(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.max_temperature_probe_no)
}

// uint32 max_temperature = 9;
inline void Extremum::clear_max_temperature() {
  max_temperature_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_max_temperature() const {
  return max_temperature_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::max_temperature() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.max_temperature)
  return _internal_max_temperature();
}
inline void Extremum::_internal_set_max_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  max_temperature_ = value;
}
inline void Extremum::set_max_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_temperature(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.max_temperature)
}

// uint32 min_temperature_device_no = 10;
inline void Extremum::clear_min_temperature_device_no() {
  min_temperature_device_no_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_min_temperature_device_no() const {
  return min_temperature_device_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::min_temperature_device_no() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.min_temperature_device_no)
  return _internal_min_temperature_device_no();
}
inline void Extremum::_internal_set_min_temperature_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  min_temperature_device_no_ = value;
}
inline void Extremum::set_min_temperature_device_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_min_temperature_device_no(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.min_temperature_device_no)
}

// uint32 min_temperature_probe_no = 11;
inline void Extremum::clear_min_temperature_probe_no() {
  min_temperature_probe_no_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_min_temperature_probe_no() const {
  return min_temperature_probe_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::min_temperature_probe_no() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.min_temperature_probe_no)
  return _internal_min_temperature_probe_no();
}
inline void Extremum::_internal_set_min_temperature_probe_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  min_temperature_probe_no_ = value;
}
inline void Extremum::set_min_temperature_probe_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_min_temperature_probe_no(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.min_temperature_probe_no)
}

// uint32 min_temperature = 12;
inline void Extremum::clear_min_temperature() {
  min_temperature_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::_internal_min_temperature() const {
  return min_temperature_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Extremum::min_temperature() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Extremum.min_temperature)
  return _internal_min_temperature();
}
inline void Extremum::_internal_set_min_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  min_temperature_ = value;
}
inline void Extremum::set_min_temperature(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_min_temperature(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Extremum.min_temperature)
}

// -------------------------------------------------------------------

// Alarm

// uint32 max_alarm_level = 1;
inline void Alarm::clear_max_alarm_level() {
  max_alarm_level_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::_internal_max_alarm_level() const {
  return max_alarm_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::max_alarm_level() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Alarm.max_alarm_level)
  return _internal_max_alarm_level();
}
inline void Alarm::_internal_set_max_alarm_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  max_alarm_level_ = value;
}
inline void Alarm::set_max_alarm_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_alarm_level(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Alarm.max_alarm_level)
}

// uint32 alarm_flag = 2;
inline void Alarm::clear_alarm_flag() {
  alarm_flag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::_internal_alarm_flag() const {
  return alarm_flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::alarm_flag() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Alarm.alarm_flag)
  return _internal_alarm_flag();
}
inline void Alarm::_internal_set_alarm_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  alarm_flag_ = value;
}
inline void Alarm::set_alarm_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_alarm_flag(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Alarm.alarm_flag)
}

// uint32 battery_fault_count = 3;
inline void Alarm::clear_battery_fault_count() {
  battery_fault_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::_internal_battery_fault_count() const {
  return battery_fault_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::battery_fault_count() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Alarm.battery_fault_count)
  return _internal_battery_fault_count();
}
inline void Alarm::_internal_set_battery_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  battery_fault_count_ = value;
}
inline void Alarm::set_battery_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_battery_fault_count(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Alarm.battery_fault_count)
}

// repeated uint32 battery_fault_list = 4;
inline int Alarm::_internal_battery_fault_list_size() const {
  return battery_fault_list_.size();
}
inline int Alarm::battery_fault_list_size() const {
  return _internal_battery_fault_list_size();
}
inline void Alarm::clear_battery_fault_list() {
  battery_fault_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::_internal_battery_fault_list(int index) const {
  return battery_fault_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::battery_fault_list(int index) const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Alarm.battery_fault_list)
  return _internal_battery_fault_list(index);
}
inline void Alarm::set_battery_fault_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  battery_fault_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Alarm.battery_fault_list)
}
inline void Alarm::_internal_add_battery_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  battery_fault_list_.Add(value);
}
inline void Alarm::add_battery_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_battery_fault_list(value);
  // @@protoc_insertion_point(field_add:tbox.mcu.rsms.v1.Alarm.battery_fault_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Alarm::_internal_battery_fault_list() const {
  return battery_fault_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Alarm::battery_fault_list() const {
  // @@protoc_insertion_point(field_list:tbox.mcu.rsms.v1.Alarm.battery_fault_list)
  return _internal_battery_fault_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Alarm::_internal_mutable_battery_fault_list() {
  return &battery_fault_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Alarm::mutable_battery_fault_list() {
  // @@protoc_insertion_point(field_mutable_list:tbox.mcu.rsms.v1.Alarm.battery_fault_list)
  return _internal_mutable_battery_fault_list();
}

// uint32 drive_motor_fault_count = 5;
inline void Alarm::clear_drive_motor_fault_count() {
  drive_motor_fault_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::_internal_drive_motor_fault_count() const {
  return drive_motor_fault_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::drive_motor_fault_count() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Alarm.drive_motor_fault_count)
  return _internal_drive_motor_fault_count();
}
inline void Alarm::_internal_set_drive_motor_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  drive_motor_fault_count_ = value;
}
inline void Alarm::set_drive_motor_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_drive_motor_fault_count(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Alarm.drive_motor_fault_count)
}

// repeated uint32 drive_motor_fault_list = 6;
inline int Alarm::_internal_drive_motor_fault_list_size() const {
  return drive_motor_fault_list_.size();
}
inline int Alarm::drive_motor_fault_list_size() const {
  return _internal_drive_motor_fault_list_size();
}
inline void Alarm::clear_drive_motor_fault_list() {
  drive_motor_fault_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::_internal_drive_motor_fault_list(int index) const {
  return drive_motor_fault_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::drive_motor_fault_list(int index) const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Alarm.drive_motor_fault_list)
  return _internal_drive_motor_fault_list(index);
}
inline void Alarm::set_drive_motor_fault_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  drive_motor_fault_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Alarm.drive_motor_fault_list)
}
inline void Alarm::_internal_add_drive_motor_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  drive_motor_fault_list_.Add(value);
}
inline void Alarm::add_drive_motor_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_drive_motor_fault_list(value);
  // @@protoc_insertion_point(field_add:tbox.mcu.rsms.v1.Alarm.drive_motor_fault_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Alarm::_internal_drive_motor_fault_list() const {
  return drive_motor_fault_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Alarm::drive_motor_fault_list() const {
  // @@protoc_insertion_point(field_list:tbox.mcu.rsms.v1.Alarm.drive_motor_fault_list)
  return _internal_drive_motor_fault_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Alarm::_internal_mutable_drive_motor_fault_list() {
  return &drive_motor_fault_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Alarm::mutable_drive_motor_fault_list() {
  // @@protoc_insertion_point(field_mutable_list:tbox.mcu.rsms.v1.Alarm.drive_motor_fault_list)
  return _internal_mutable_drive_motor_fault_list();
}

// uint32 engine_fault_count = 7;
inline void Alarm::clear_engine_fault_count() {
  engine_fault_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::_internal_engine_fault_count() const {
  return engine_fault_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::engine_fault_count() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Alarm.engine_fault_count)
  return _internal_engine_fault_count();
}
inline void Alarm::_internal_set_engine_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  engine_fault_count_ = value;
}
inline void Alarm::set_engine_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_engine_fault_count(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Alarm.engine_fault_count)
}

// repeated uint32 engine_fault_list = 8;
inline int Alarm::_internal_engine_fault_list_size() const {
  return engine_fault_list_.size();
}
inline int Alarm::engine_fault_list_size() const {
  return _internal_engine_fault_list_size();
}
inline void Alarm::clear_engine_fault_list() {
  engine_fault_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::_internal_engine_fault_list(int index) const {
  return engine_fault_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::engine_fault_list(int index) const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Alarm.engine_fault_list)
  return _internal_engine_fault_list(index);
}
inline void Alarm::set_engine_fault_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  engine_fault_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Alarm.engine_fault_list)
}
inline void Alarm::_internal_add_engine_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  engine_fault_list_.Add(value);
}
inline void Alarm::add_engine_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_engine_fault_list(value);
  // @@protoc_insertion_point(field_add:tbox.mcu.rsms.v1.Alarm.engine_fault_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Alarm::_internal_engine_fault_list() const {
  return engine_fault_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Alarm::engine_fault_list() const {
  // @@protoc_insertion_point(field_list:tbox.mcu.rsms.v1.Alarm.engine_fault_list)
  return _internal_engine_fault_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Alarm::_internal_mutable_engine_fault_list() {
  return &engine_fault_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Alarm::mutable_engine_fault_list() {
  // @@protoc_insertion_point(field_mutable_list:tbox.mcu.rsms.v1.Alarm.engine_fault_list)
  return _internal_mutable_engine_fault_list();
}

// uint32 other_fault_count = 9;
inline void Alarm::clear_other_fault_count() {
  other_fault_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::_internal_other_fault_count() const {
  return other_fault_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::other_fault_count() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Alarm.other_fault_count)
  return _internal_other_fault_count();
}
inline void Alarm::_internal_set_other_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  other_fault_count_ = value;
}
inline void Alarm::set_other_fault_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_other_fault_count(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Alarm.other_fault_count)
}

// repeated uint32 other_fault_list = 10;
inline int Alarm::_internal_other_fault_list_size() const {
  return other_fault_list_.size();
}
inline int Alarm::other_fault_list_size() const {
  return _internal_other_fault_list_size();
}
inline void Alarm::clear_other_fault_list() {
  other_fault_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::_internal_other_fault_list(int index) const {
  return other_fault_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm::other_fault_list(int index) const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.Alarm.other_fault_list)
  return _internal_other_fault_list(index);
}
inline void Alarm::set_other_fault_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  other_fault_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.Alarm.other_fault_list)
}
inline void Alarm::_internal_add_other_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  other_fault_list_.Add(value);
}
inline void Alarm::add_other_fault_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_other_fault_list(value);
  // @@protoc_insertion_point(field_add:tbox.mcu.rsms.v1.Alarm.other_fault_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Alarm::_internal_other_fault_list() const {
  return other_fault_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Alarm::other_fault_list() const {
  // @@protoc_insertion_point(field_list:tbox.mcu.rsms.v1.Alarm.other_fault_list)
  return _internal_other_fault_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Alarm::_internal_mutable_other_fault_list() {
  return &other_fault_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Alarm::mutable_other_fault_list() {
  // @@protoc_insertion_point(field_mutable_list:tbox.mcu.rsms.v1.Alarm.other_fault_list)
  return _internal_mutable_other_fault_list();
}

// -------------------------------------------------------------------

// BatteryVoltage

// uint32 battery_count = 1;
inline void BatteryVoltage::clear_battery_count() {
  battery_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BatteryVoltage::_internal_battery_count() const {
  return battery_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BatteryVoltage::battery_count() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.BatteryVoltage.battery_count)
  return _internal_battery_count();
}
inline void BatteryVoltage::_internal_set_battery_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  battery_count_ = value;
}
inline void BatteryVoltage::set_battery_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_battery_count(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.BatteryVoltage.battery_count)
}

// repeated .tbox.mcu.rsms.v1.SingleBatteryVoltage battery_voltage_list = 2;
inline int BatteryVoltage::_internal_battery_voltage_list_size() const {
  return battery_voltage_list_.size();
}
inline int BatteryVoltage::battery_voltage_list_size() const {
  return _internal_battery_voltage_list_size();
}
inline void BatteryVoltage::clear_battery_voltage_list() {
  battery_voltage_list_.Clear();
}
inline ::tbox::mcu::rsms::v1::SingleBatteryVoltage* BatteryVoltage::mutable_battery_voltage_list(int index) {
  // @@protoc_insertion_point(field_mutable:tbox.mcu.rsms.v1.BatteryVoltage.battery_voltage_list)
  return battery_voltage_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleBatteryVoltage >*
BatteryVoltage::mutable_battery_voltage_list() {
  // @@protoc_insertion_point(field_mutable_list:tbox.mcu.rsms.v1.BatteryVoltage.battery_voltage_list)
  return &battery_voltage_list_;
}
inline const ::tbox::mcu::rsms::v1::SingleBatteryVoltage& BatteryVoltage::_internal_battery_voltage_list(int index) const {
  return battery_voltage_list_.Get(index);
}
inline const ::tbox::mcu::rsms::v1::SingleBatteryVoltage& BatteryVoltage::battery_voltage_list(int index) const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.BatteryVoltage.battery_voltage_list)
  return _internal_battery_voltage_list(index);
}
inline ::tbox::mcu::rsms::v1::SingleBatteryVoltage* BatteryVoltage::_internal_add_battery_voltage_list() {
  return battery_voltage_list_.Add();
}
inline ::tbox::mcu::rsms::v1::SingleBatteryVoltage* BatteryVoltage::add_battery_voltage_list() {
  // @@protoc_insertion_point(field_add:tbox.mcu.rsms.v1.BatteryVoltage.battery_voltage_list)
  return _internal_add_battery_voltage_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleBatteryVoltage >&
BatteryVoltage::battery_voltage_list() const {
  // @@protoc_insertion_point(field_list:tbox.mcu.rsms.v1.BatteryVoltage.battery_voltage_list)
  return battery_voltage_list_;
}

// -------------------------------------------------------------------

// SingleBatteryVoltage

// uint32 sn = 1;
inline void SingleBatteryVoltage::clear_sn() {
  sn_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::_internal_sn() const {
  return sn_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::sn() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleBatteryVoltage.sn)
  return _internal_sn();
}
inline void SingleBatteryVoltage::_internal_set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sn_ = value;
}
inline void SingleBatteryVoltage::set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sn(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleBatteryVoltage.sn)
}

// uint32 voltage = 2;
inline void SingleBatteryVoltage::clear_voltage() {
  voltage_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::_internal_voltage() const {
  return voltage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::voltage() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleBatteryVoltage.voltage)
  return _internal_voltage();
}
inline void SingleBatteryVoltage::_internal_set_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  voltage_ = value;
}
inline void SingleBatteryVoltage::set_voltage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_voltage(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleBatteryVoltage.voltage)
}

// uint32 current = 3;
inline void SingleBatteryVoltage::clear_current() {
  current_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::_internal_current() const {
  return current_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::current() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleBatteryVoltage.current)
  return _internal_current();
}
inline void SingleBatteryVoltage::_internal_set_current(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_ = value;
}
inline void SingleBatteryVoltage::set_current(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleBatteryVoltage.current)
}

// uint32 cell_count = 4;
inline void SingleBatteryVoltage::clear_cell_count() {
  cell_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::_internal_cell_count() const {
  return cell_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::cell_count() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleBatteryVoltage.cell_count)
  return _internal_cell_count();
}
inline void SingleBatteryVoltage::_internal_set_cell_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cell_count_ = value;
}
inline void SingleBatteryVoltage::set_cell_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cell_count(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleBatteryVoltage.cell_count)
}

// uint32 frame_start_cell_sn = 5;
inline void SingleBatteryVoltage::clear_frame_start_cell_sn() {
  frame_start_cell_sn_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::_internal_frame_start_cell_sn() const {
  return frame_start_cell_sn_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::frame_start_cell_sn() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleBatteryVoltage.frame_start_cell_sn)
  return _internal_frame_start_cell_sn();
}
inline void SingleBatteryVoltage::_internal_set_frame_start_cell_sn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  frame_start_cell_sn_ = value;
}
inline void SingleBatteryVoltage::set_frame_start_cell_sn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_frame_start_cell_sn(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleBatteryVoltage.frame_start_cell_sn)
}

// uint32 frame_cell_count = 6;
inline void SingleBatteryVoltage::clear_frame_cell_count() {
  frame_cell_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::_internal_frame_cell_count() const {
  return frame_cell_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::frame_cell_count() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleBatteryVoltage.frame_cell_count)
  return _internal_frame_cell_count();
}
inline void SingleBatteryVoltage::_internal_set_frame_cell_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  frame_cell_count_ = value;
}
inline void SingleBatteryVoltage::set_frame_cell_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_frame_cell_count(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleBatteryVoltage.frame_cell_count)
}

// repeated uint32 cell_voltage_list = 7;
inline int SingleBatteryVoltage::_internal_cell_voltage_list_size() const {
  return cell_voltage_list_.size();
}
inline int SingleBatteryVoltage::cell_voltage_list_size() const {
  return _internal_cell_voltage_list_size();
}
inline void SingleBatteryVoltage::clear_cell_voltage_list() {
  cell_voltage_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::_internal_cell_voltage_list(int index) const {
  return cell_voltage_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryVoltage::cell_voltage_list(int index) const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleBatteryVoltage.cell_voltage_list)
  return _internal_cell_voltage_list(index);
}
inline void SingleBatteryVoltage::set_cell_voltage_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  cell_voltage_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleBatteryVoltage.cell_voltage_list)
}
inline void SingleBatteryVoltage::_internal_add_cell_voltage_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  cell_voltage_list_.Add(value);
}
inline void SingleBatteryVoltage::add_cell_voltage_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_cell_voltage_list(value);
  // @@protoc_insertion_point(field_add:tbox.mcu.rsms.v1.SingleBatteryVoltage.cell_voltage_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
SingleBatteryVoltage::_internal_cell_voltage_list() const {
  return cell_voltage_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
SingleBatteryVoltage::cell_voltage_list() const {
  // @@protoc_insertion_point(field_list:tbox.mcu.rsms.v1.SingleBatteryVoltage.cell_voltage_list)
  return _internal_cell_voltage_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
SingleBatteryVoltage::_internal_mutable_cell_voltage_list() {
  return &cell_voltage_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
SingleBatteryVoltage::mutable_cell_voltage_list() {
  // @@protoc_insertion_point(field_mutable_list:tbox.mcu.rsms.v1.SingleBatteryVoltage.cell_voltage_list)
  return _internal_mutable_cell_voltage_list();
}

// -------------------------------------------------------------------

// BatteryTemperature

// uint32 battery_count = 1;
inline void BatteryTemperature::clear_battery_count() {
  battery_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BatteryTemperature::_internal_battery_count() const {
  return battery_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BatteryTemperature::battery_count() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.BatteryTemperature.battery_count)
  return _internal_battery_count();
}
inline void BatteryTemperature::_internal_set_battery_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  battery_count_ = value;
}
inline void BatteryTemperature::set_battery_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_battery_count(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.BatteryTemperature.battery_count)
}

// repeated .tbox.mcu.rsms.v1.SingleBatteryTemperature battery_temperature_list = 2;
inline int BatteryTemperature::_internal_battery_temperature_list_size() const {
  return battery_temperature_list_.size();
}
inline int BatteryTemperature::battery_temperature_list_size() const {
  return _internal_battery_temperature_list_size();
}
inline void BatteryTemperature::clear_battery_temperature_list() {
  battery_temperature_list_.Clear();
}
inline ::tbox::mcu::rsms::v1::SingleBatteryTemperature* BatteryTemperature::mutable_battery_temperature_list(int index) {
  // @@protoc_insertion_point(field_mutable:tbox.mcu.rsms.v1.BatteryTemperature.battery_temperature_list)
  return battery_temperature_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleBatteryTemperature >*
BatteryTemperature::mutable_battery_temperature_list() {
  // @@protoc_insertion_point(field_mutable_list:tbox.mcu.rsms.v1.BatteryTemperature.battery_temperature_list)
  return &battery_temperature_list_;
}
inline const ::tbox::mcu::rsms::v1::SingleBatteryTemperature& BatteryTemperature::_internal_battery_temperature_list(int index) const {
  return battery_temperature_list_.Get(index);
}
inline const ::tbox::mcu::rsms::v1::SingleBatteryTemperature& BatteryTemperature::battery_temperature_list(int index) const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.BatteryTemperature.battery_temperature_list)
  return _internal_battery_temperature_list(index);
}
inline ::tbox::mcu::rsms::v1::SingleBatteryTemperature* BatteryTemperature::_internal_add_battery_temperature_list() {
  return battery_temperature_list_.Add();
}
inline ::tbox::mcu::rsms::v1::SingleBatteryTemperature* BatteryTemperature::add_battery_temperature_list() {
  // @@protoc_insertion_point(field_add:tbox.mcu.rsms.v1.BatteryTemperature.battery_temperature_list)
  return _internal_add_battery_temperature_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tbox::mcu::rsms::v1::SingleBatteryTemperature >&
BatteryTemperature::battery_temperature_list() const {
  // @@protoc_insertion_point(field_list:tbox.mcu.rsms.v1.BatteryTemperature.battery_temperature_list)
  return battery_temperature_list_;
}

// -------------------------------------------------------------------

// SingleBatteryTemperature

// uint32 sn = 1;
inline void SingleBatteryTemperature::clear_sn() {
  sn_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryTemperature::_internal_sn() const {
  return sn_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryTemperature::sn() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleBatteryTemperature.sn)
  return _internal_sn();
}
inline void SingleBatteryTemperature::_internal_set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sn_ = value;
}
inline void SingleBatteryTemperature::set_sn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sn(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleBatteryTemperature.sn)
}

// uint32 probe_count = 2;
inline void SingleBatteryTemperature::clear_probe_count() {
  probe_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryTemperature::_internal_probe_count() const {
  return probe_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryTemperature::probe_count() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleBatteryTemperature.probe_count)
  return _internal_probe_count();
}
inline void SingleBatteryTemperature::_internal_set_probe_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  probe_count_ = value;
}
inline void SingleBatteryTemperature::set_probe_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_probe_count(value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleBatteryTemperature.probe_count)
}

// repeated uint32 temperatures = 3;
inline int SingleBatteryTemperature::_internal_temperatures_size() const {
  return temperatures_.size();
}
inline int SingleBatteryTemperature::temperatures_size() const {
  return _internal_temperatures_size();
}
inline void SingleBatteryTemperature::clear_temperatures() {
  temperatures_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryTemperature::_internal_temperatures(int index) const {
  return temperatures_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SingleBatteryTemperature::temperatures(int index) const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.SingleBatteryTemperature.temperatures)
  return _internal_temperatures(index);
}
inline void SingleBatteryTemperature::set_temperatures(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  temperatures_.Set(index, value);
  // @@protoc_insertion_point(field_set:tbox.mcu.rsms.v1.SingleBatteryTemperature.temperatures)
}
inline void SingleBatteryTemperature::_internal_add_temperatures(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  temperatures_.Add(value);
}
inline void SingleBatteryTemperature::add_temperatures(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_temperatures(value);
  // @@protoc_insertion_point(field_add:tbox.mcu.rsms.v1.SingleBatteryTemperature.temperatures)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
SingleBatteryTemperature::_internal_temperatures() const {
  return temperatures_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
SingleBatteryTemperature::temperatures() const {
  // @@protoc_insertion_point(field_list:tbox.mcu.rsms.v1.SingleBatteryTemperature.temperatures)
  return _internal_temperatures();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
SingleBatteryTemperature::_internal_mutable_temperatures() {
  return &temperatures_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
SingleBatteryTemperature::mutable_temperatures() {
  // @@protoc_insertion_point(field_mutable_list:tbox.mcu.rsms.v1.SingleBatteryTemperature.temperatures)
  return _internal_mutable_temperatures();
}

// -------------------------------------------------------------------

// RsmsData

// .tbox.mcu.rsms.v1.VehicleData vehicle_data = 1;
inline bool RsmsData::_internal_has_vehicle_data() const {
  return this != internal_default_instance() && vehicle_data_ != nullptr;
}
inline bool RsmsData::has_vehicle_data() const {
  return _internal_has_vehicle_data();
}
inline void RsmsData::clear_vehicle_data() {
  if (GetArena() == nullptr && vehicle_data_ != nullptr) {
    delete vehicle_data_;
  }
  vehicle_data_ = nullptr;
}
inline const ::tbox::mcu::rsms::v1::VehicleData& RsmsData::_internal_vehicle_data() const {
  const ::tbox::mcu::rsms::v1::VehicleData* p = vehicle_data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tbox::mcu::rsms::v1::VehicleData*>(
      &::tbox::mcu::rsms::v1::_VehicleData_default_instance_);
}
inline const ::tbox::mcu::rsms::v1::VehicleData& RsmsData::vehicle_data() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.RsmsData.vehicle_data)
  return _internal_vehicle_data();
}
inline void RsmsData::unsafe_arena_set_allocated_vehicle_data(
    ::tbox::mcu::rsms::v1::VehicleData* vehicle_data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vehicle_data_);
  }
  vehicle_data_ = vehicle_data;
  if (vehicle_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tbox.mcu.rsms.v1.RsmsData.vehicle_data)
}
inline ::tbox::mcu::rsms::v1::VehicleData* RsmsData::release_vehicle_data() {
  auto temp = unsafe_arena_release_vehicle_data();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tbox::mcu::rsms::v1::VehicleData* RsmsData::unsafe_arena_release_vehicle_data() {
  // @@protoc_insertion_point(field_release:tbox.mcu.rsms.v1.RsmsData.vehicle_data)
  
  ::tbox::mcu::rsms::v1::VehicleData* temp = vehicle_data_;
  vehicle_data_ = nullptr;
  return temp;
}
inline ::tbox::mcu::rsms::v1::VehicleData* RsmsData::_internal_mutable_vehicle_data() {
  
  if (vehicle_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::tbox::mcu::rsms::v1::VehicleData>(GetArena());
    vehicle_data_ = p;
  }
  return vehicle_data_;
}
inline ::tbox::mcu::rsms::v1::VehicleData* RsmsData::mutable_vehicle_data() {
  // @@protoc_insertion_point(field_mutable:tbox.mcu.rsms.v1.RsmsData.vehicle_data)
  return _internal_mutable_vehicle_data();
}
inline void RsmsData::set_allocated_vehicle_data(::tbox::mcu::rsms::v1::VehicleData* vehicle_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete vehicle_data_;
  }
  if (vehicle_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(vehicle_data);
    if (message_arena != submessage_arena) {
      vehicle_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vehicle_data, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_data_ = vehicle_data;
  // @@protoc_insertion_point(field_set_allocated:tbox.mcu.rsms.v1.RsmsData.vehicle_data)
}

// .tbox.mcu.rsms.v1.DriveMotor drive_motor = 2;
inline bool RsmsData::_internal_has_drive_motor() const {
  return this != internal_default_instance() && drive_motor_ != nullptr;
}
inline bool RsmsData::has_drive_motor() const {
  return _internal_has_drive_motor();
}
inline void RsmsData::clear_drive_motor() {
  if (GetArena() == nullptr && drive_motor_ != nullptr) {
    delete drive_motor_;
  }
  drive_motor_ = nullptr;
}
inline const ::tbox::mcu::rsms::v1::DriveMotor& RsmsData::_internal_drive_motor() const {
  const ::tbox::mcu::rsms::v1::DriveMotor* p = drive_motor_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tbox::mcu::rsms::v1::DriveMotor*>(
      &::tbox::mcu::rsms::v1::_DriveMotor_default_instance_);
}
inline const ::tbox::mcu::rsms::v1::DriveMotor& RsmsData::drive_motor() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.RsmsData.drive_motor)
  return _internal_drive_motor();
}
inline void RsmsData::unsafe_arena_set_allocated_drive_motor(
    ::tbox::mcu::rsms::v1::DriveMotor* drive_motor) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(drive_motor_);
  }
  drive_motor_ = drive_motor;
  if (drive_motor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tbox.mcu.rsms.v1.RsmsData.drive_motor)
}
inline ::tbox::mcu::rsms::v1::DriveMotor* RsmsData::release_drive_motor() {
  auto temp = unsafe_arena_release_drive_motor();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tbox::mcu::rsms::v1::DriveMotor* RsmsData::unsafe_arena_release_drive_motor() {
  // @@protoc_insertion_point(field_release:tbox.mcu.rsms.v1.RsmsData.drive_motor)
  
  ::tbox::mcu::rsms::v1::DriveMotor* temp = drive_motor_;
  drive_motor_ = nullptr;
  return temp;
}
inline ::tbox::mcu::rsms::v1::DriveMotor* RsmsData::_internal_mutable_drive_motor() {
  
  if (drive_motor_ == nullptr) {
    auto* p = CreateMaybeMessage<::tbox::mcu::rsms::v1::DriveMotor>(GetArena());
    drive_motor_ = p;
  }
  return drive_motor_;
}
inline ::tbox::mcu::rsms::v1::DriveMotor* RsmsData::mutable_drive_motor() {
  // @@protoc_insertion_point(field_mutable:tbox.mcu.rsms.v1.RsmsData.drive_motor)
  return _internal_mutable_drive_motor();
}
inline void RsmsData::set_allocated_drive_motor(::tbox::mcu::rsms::v1::DriveMotor* drive_motor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete drive_motor_;
  }
  if (drive_motor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(drive_motor);
    if (message_arena != submessage_arena) {
      drive_motor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drive_motor, submessage_arena);
    }
    
  } else {
    
  }
  drive_motor_ = drive_motor;
  // @@protoc_insertion_point(field_set_allocated:tbox.mcu.rsms.v1.RsmsData.drive_motor)
}

// .tbox.mcu.rsms.v1.Position position = 3;
inline bool RsmsData::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool RsmsData::has_position() const {
  return _internal_has_position();
}
inline void RsmsData::clear_position() {
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::tbox::mcu::rsms::v1::Position& RsmsData::_internal_position() const {
  const ::tbox::mcu::rsms::v1::Position* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tbox::mcu::rsms::v1::Position*>(
      &::tbox::mcu::rsms::v1::_Position_default_instance_);
}
inline const ::tbox::mcu::rsms::v1::Position& RsmsData::position() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.RsmsData.position)
  return _internal_position();
}
inline void RsmsData::unsafe_arena_set_allocated_position(
    ::tbox::mcu::rsms::v1::Position* position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tbox.mcu.rsms.v1.RsmsData.position)
}
inline ::tbox::mcu::rsms::v1::Position* RsmsData::release_position() {
  auto temp = unsafe_arena_release_position();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tbox::mcu::rsms::v1::Position* RsmsData::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:tbox.mcu.rsms.v1.RsmsData.position)
  
  ::tbox::mcu::rsms::v1::Position* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::tbox::mcu::rsms::v1::Position* RsmsData::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::tbox::mcu::rsms::v1::Position>(GetArena());
    position_ = p;
  }
  return position_;
}
inline ::tbox::mcu::rsms::v1::Position* RsmsData::mutable_position() {
  // @@protoc_insertion_point(field_mutable:tbox.mcu.rsms.v1.RsmsData.position)
  return _internal_mutable_position();
}
inline void RsmsData::set_allocated_position(::tbox::mcu::rsms::v1::Position* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(position);
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:tbox.mcu.rsms.v1.RsmsData.position)
}

// .tbox.mcu.rsms.v1.Extremum extremum = 4;
inline bool RsmsData::_internal_has_extremum() const {
  return this != internal_default_instance() && extremum_ != nullptr;
}
inline bool RsmsData::has_extremum() const {
  return _internal_has_extremum();
}
inline void RsmsData::clear_extremum() {
  if (GetArena() == nullptr && extremum_ != nullptr) {
    delete extremum_;
  }
  extremum_ = nullptr;
}
inline const ::tbox::mcu::rsms::v1::Extremum& RsmsData::_internal_extremum() const {
  const ::tbox::mcu::rsms::v1::Extremum* p = extremum_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tbox::mcu::rsms::v1::Extremum*>(
      &::tbox::mcu::rsms::v1::_Extremum_default_instance_);
}
inline const ::tbox::mcu::rsms::v1::Extremum& RsmsData::extremum() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.RsmsData.extremum)
  return _internal_extremum();
}
inline void RsmsData::unsafe_arena_set_allocated_extremum(
    ::tbox::mcu::rsms::v1::Extremum* extremum) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(extremum_);
  }
  extremum_ = extremum;
  if (extremum) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tbox.mcu.rsms.v1.RsmsData.extremum)
}
inline ::tbox::mcu::rsms::v1::Extremum* RsmsData::release_extremum() {
  auto temp = unsafe_arena_release_extremum();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tbox::mcu::rsms::v1::Extremum* RsmsData::unsafe_arena_release_extremum() {
  // @@protoc_insertion_point(field_release:tbox.mcu.rsms.v1.RsmsData.extremum)
  
  ::tbox::mcu::rsms::v1::Extremum* temp = extremum_;
  extremum_ = nullptr;
  return temp;
}
inline ::tbox::mcu::rsms::v1::Extremum* RsmsData::_internal_mutable_extremum() {
  
  if (extremum_ == nullptr) {
    auto* p = CreateMaybeMessage<::tbox::mcu::rsms::v1::Extremum>(GetArena());
    extremum_ = p;
  }
  return extremum_;
}
inline ::tbox::mcu::rsms::v1::Extremum* RsmsData::mutable_extremum() {
  // @@protoc_insertion_point(field_mutable:tbox.mcu.rsms.v1.RsmsData.extremum)
  return _internal_mutable_extremum();
}
inline void RsmsData::set_allocated_extremum(::tbox::mcu::rsms::v1::Extremum* extremum) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete extremum_;
  }
  if (extremum) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(extremum);
    if (message_arena != submessage_arena) {
      extremum = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, extremum, submessage_arena);
    }
    
  } else {
    
  }
  extremum_ = extremum;
  // @@protoc_insertion_point(field_set_allocated:tbox.mcu.rsms.v1.RsmsData.extremum)
}

// .tbox.mcu.rsms.v1.Alarm alarm = 5;
inline bool RsmsData::_internal_has_alarm() const {
  return this != internal_default_instance() && alarm_ != nullptr;
}
inline bool RsmsData::has_alarm() const {
  return _internal_has_alarm();
}
inline void RsmsData::clear_alarm() {
  if (GetArena() == nullptr && alarm_ != nullptr) {
    delete alarm_;
  }
  alarm_ = nullptr;
}
inline const ::tbox::mcu::rsms::v1::Alarm& RsmsData::_internal_alarm() const {
  const ::tbox::mcu::rsms::v1::Alarm* p = alarm_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tbox::mcu::rsms::v1::Alarm*>(
      &::tbox::mcu::rsms::v1::_Alarm_default_instance_);
}
inline const ::tbox::mcu::rsms::v1::Alarm& RsmsData::alarm() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.RsmsData.alarm)
  return _internal_alarm();
}
inline void RsmsData::unsafe_arena_set_allocated_alarm(
    ::tbox::mcu::rsms::v1::Alarm* alarm) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(alarm_);
  }
  alarm_ = alarm;
  if (alarm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tbox.mcu.rsms.v1.RsmsData.alarm)
}
inline ::tbox::mcu::rsms::v1::Alarm* RsmsData::release_alarm() {
  auto temp = unsafe_arena_release_alarm();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tbox::mcu::rsms::v1::Alarm* RsmsData::unsafe_arena_release_alarm() {
  // @@protoc_insertion_point(field_release:tbox.mcu.rsms.v1.RsmsData.alarm)
  
  ::tbox::mcu::rsms::v1::Alarm* temp = alarm_;
  alarm_ = nullptr;
  return temp;
}
inline ::tbox::mcu::rsms::v1::Alarm* RsmsData::_internal_mutable_alarm() {
  
  if (alarm_ == nullptr) {
    auto* p = CreateMaybeMessage<::tbox::mcu::rsms::v1::Alarm>(GetArena());
    alarm_ = p;
  }
  return alarm_;
}
inline ::tbox::mcu::rsms::v1::Alarm* RsmsData::mutable_alarm() {
  // @@protoc_insertion_point(field_mutable:tbox.mcu.rsms.v1.RsmsData.alarm)
  return _internal_mutable_alarm();
}
inline void RsmsData::set_allocated_alarm(::tbox::mcu::rsms::v1::Alarm* alarm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete alarm_;
  }
  if (alarm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(alarm);
    if (message_arena != submessage_arena) {
      alarm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, alarm, submessage_arena);
    }
    
  } else {
    
  }
  alarm_ = alarm;
  // @@protoc_insertion_point(field_set_allocated:tbox.mcu.rsms.v1.RsmsData.alarm)
}

// .tbox.mcu.rsms.v1.BatteryVoltage battery_voltage = 6;
inline bool RsmsData::_internal_has_battery_voltage() const {
  return this != internal_default_instance() && battery_voltage_ != nullptr;
}
inline bool RsmsData::has_battery_voltage() const {
  return _internal_has_battery_voltage();
}
inline void RsmsData::clear_battery_voltage() {
  if (GetArena() == nullptr && battery_voltage_ != nullptr) {
    delete battery_voltage_;
  }
  battery_voltage_ = nullptr;
}
inline const ::tbox::mcu::rsms::v1::BatteryVoltage& RsmsData::_internal_battery_voltage() const {
  const ::tbox::mcu::rsms::v1::BatteryVoltage* p = battery_voltage_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tbox::mcu::rsms::v1::BatteryVoltage*>(
      &::tbox::mcu::rsms::v1::_BatteryVoltage_default_instance_);
}
inline const ::tbox::mcu::rsms::v1::BatteryVoltage& RsmsData::battery_voltage() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.RsmsData.battery_voltage)
  return _internal_battery_voltage();
}
inline void RsmsData::unsafe_arena_set_allocated_battery_voltage(
    ::tbox::mcu::rsms::v1::BatteryVoltage* battery_voltage) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(battery_voltage_);
  }
  battery_voltage_ = battery_voltage;
  if (battery_voltage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tbox.mcu.rsms.v1.RsmsData.battery_voltage)
}
inline ::tbox::mcu::rsms::v1::BatteryVoltage* RsmsData::release_battery_voltage() {
  auto temp = unsafe_arena_release_battery_voltage();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tbox::mcu::rsms::v1::BatteryVoltage* RsmsData::unsafe_arena_release_battery_voltage() {
  // @@protoc_insertion_point(field_release:tbox.mcu.rsms.v1.RsmsData.battery_voltage)
  
  ::tbox::mcu::rsms::v1::BatteryVoltage* temp = battery_voltage_;
  battery_voltage_ = nullptr;
  return temp;
}
inline ::tbox::mcu::rsms::v1::BatteryVoltage* RsmsData::_internal_mutable_battery_voltage() {
  
  if (battery_voltage_ == nullptr) {
    auto* p = CreateMaybeMessage<::tbox::mcu::rsms::v1::BatteryVoltage>(GetArena());
    battery_voltage_ = p;
  }
  return battery_voltage_;
}
inline ::tbox::mcu::rsms::v1::BatteryVoltage* RsmsData::mutable_battery_voltage() {
  // @@protoc_insertion_point(field_mutable:tbox.mcu.rsms.v1.RsmsData.battery_voltage)
  return _internal_mutable_battery_voltage();
}
inline void RsmsData::set_allocated_battery_voltage(::tbox::mcu::rsms::v1::BatteryVoltage* battery_voltage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete battery_voltage_;
  }
  if (battery_voltage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(battery_voltage);
    if (message_arena != submessage_arena) {
      battery_voltage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, battery_voltage, submessage_arena);
    }
    
  } else {
    
  }
  battery_voltage_ = battery_voltage;
  // @@protoc_insertion_point(field_set_allocated:tbox.mcu.rsms.v1.RsmsData.battery_voltage)
}

// .tbox.mcu.rsms.v1.BatteryTemperature battery_temperature = 7;
inline bool RsmsData::_internal_has_battery_temperature() const {
  return this != internal_default_instance() && battery_temperature_ != nullptr;
}
inline bool RsmsData::has_battery_temperature() const {
  return _internal_has_battery_temperature();
}
inline void RsmsData::clear_battery_temperature() {
  if (GetArena() == nullptr && battery_temperature_ != nullptr) {
    delete battery_temperature_;
  }
  battery_temperature_ = nullptr;
}
inline const ::tbox::mcu::rsms::v1::BatteryTemperature& RsmsData::_internal_battery_temperature() const {
  const ::tbox::mcu::rsms::v1::BatteryTemperature* p = battery_temperature_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tbox::mcu::rsms::v1::BatteryTemperature*>(
      &::tbox::mcu::rsms::v1::_BatteryTemperature_default_instance_);
}
inline const ::tbox::mcu::rsms::v1::BatteryTemperature& RsmsData::battery_temperature() const {
  // @@protoc_insertion_point(field_get:tbox.mcu.rsms.v1.RsmsData.battery_temperature)
  return _internal_battery_temperature();
}
inline void RsmsData::unsafe_arena_set_allocated_battery_temperature(
    ::tbox::mcu::rsms::v1::BatteryTemperature* battery_temperature) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(battery_temperature_);
  }
  battery_temperature_ = battery_temperature;
  if (battery_temperature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tbox.mcu.rsms.v1.RsmsData.battery_temperature)
}
inline ::tbox::mcu::rsms::v1::BatteryTemperature* RsmsData::release_battery_temperature() {
  auto temp = unsafe_arena_release_battery_temperature();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tbox::mcu::rsms::v1::BatteryTemperature* RsmsData::unsafe_arena_release_battery_temperature() {
  // @@protoc_insertion_point(field_release:tbox.mcu.rsms.v1.RsmsData.battery_temperature)
  
  ::tbox::mcu::rsms::v1::BatteryTemperature* temp = battery_temperature_;
  battery_temperature_ = nullptr;
  return temp;
}
inline ::tbox::mcu::rsms::v1::BatteryTemperature* RsmsData::_internal_mutable_battery_temperature() {
  
  if (battery_temperature_ == nullptr) {
    auto* p = CreateMaybeMessage<::tbox::mcu::rsms::v1::BatteryTemperature>(GetArena());
    battery_temperature_ = p;
  }
  return battery_temperature_;
}
inline ::tbox::mcu::rsms::v1::BatteryTemperature* RsmsData::mutable_battery_temperature() {
  // @@protoc_insertion_point(field_mutable:tbox.mcu.rsms.v1.RsmsData.battery_temperature)
  return _internal_mutable_battery_temperature();
}
inline void RsmsData::set_allocated_battery_temperature(::tbox::mcu::rsms::v1::BatteryTemperature* battery_temperature) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete battery_temperature_;
  }
  if (battery_temperature) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(battery_temperature);
    if (message_arena != submessage_arena) {
      battery_temperature = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, battery_temperature, submessage_arena);
    }
    
  } else {
    
  }
  battery_temperature_ = battery_temperature;
  // @@protoc_insertion_point(field_set_allocated:tbox.mcu.rsms.v1.RsmsData.battery_temperature)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace rsms
}  // namespace mcu
}  // namespace tbox

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_rsms_5fdata_5fv1_2eproto
